{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "09304ea1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dependencies and Set Up\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as st\n",
    "from scipy.stats import linregress\n",
    "import seaborn as sns  # For heatmap visualization\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2b8c4737",
   "metadata": {},
   "outputs": [],
   "source": [
    "%notebook widget"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c1ab29e9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a path to the file making it into a dataframe\n",
    "rent_file = pd.read_csv(\"Raw_Price_Data//price.csv\")\n",
    "\n",
    "rent_df = pd.DataFrame(rent_file)\n",
    "\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "e00772d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Identified what columns are missing data\n",
    "clean_rent_df = rent_df.dropna(how = 'any')\n",
    "\n",
    "clean_rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "15f6b90f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Extracted states from data (CA, IL, NY, TX)\n",
    "four_states = [\"NY\", \"CA\", \"IL\", \"TX\"]\n",
    "\n",
    "four_states_df = rent_df[rent_df['State'].isin(four_states)]\n",
    "\n",
    "four_states_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "717bbe23",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dropped all NaN values\n",
    "rent_df.dropna(inplace = True)\n",
    "\n",
    "#Display the DataFrame\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "810d3f42",
   "metadata": {},
   "outputs": [],
   "source": [
    "#New York Data Frame\n",
    "NY_state = [\"NY\"]\n",
    "\n",
    "NY_state_df = rent_df[rent_df['State'].isin(NY_state)]\n",
    "\n",
    "NY_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a8f2fee5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#California Data Frame\n",
    "CA_state = [\"CA\"]\n",
    "\n",
    "CA_state_df = rent_df[rent_df['State'].isin(CA_state)]\n",
    "\n",
    "CA_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "20934f71",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Illinois Data Frame\n",
    "IL_state = [\"IL\"]\n",
    "\n",
    "IL_state_df = rent_df[rent_df['State'].isin(IL_state)]\n",
    "\n",
    "IL_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "e1790429",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Texas Data Frame\n",
    "TX_state = [\"TX\"]\n",
    "\n",
    "TX_state_df = rent_df[rent_df['State'].isin(TX_state)]\n",
    "\n",
    "TX_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f9fd1b7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Made all of the columns into a list\n",
    "columns_list = ['January 2011',\n",
    "'February 2011','March 2011','April 2011','May 2011','June 2011','July 2011',\n",
    "'August 2011','September 2011','October 2011','November 2011','December 2011',\n",
    "'January 2012','February 2012','March 2012','April 2012','May 2012','June 2012',\n",
    "'July 2012','August 2012','September 2012','October 2012','November 2012','December 2012',\n",
    "'January 2013','February 2013','March 2013','April 2013','May 2013','June 2013','July 2013',\n",
    "'August 2013','September 2013','October 2013','November 2013','December 2013','January 2014',\n",
    "'February 2014','March 2014','April 2014','May 2014','June 2014','July 2014','August 2014',\n",
    "'September 2014','October 2014','November 2014','December 2014','January 2015','February 2015',\n",
    "'March 2015','April 2015','May 2015','June 2015','July 2015','August 2015','September 2015','October 2015',\n",
    "'November 2015','December 2015','January 2016','February 2016','March 2016','April 2016','May 2016',\n",
    "'June 2016','July 2016','August 2016','September 2016','October 2016','November 2016','December 2016']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "41370638",
   "metadata": {},
   "outputs": [],
   "source": [
    "# US median rent prices\n",
    "US_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    US_med_rent = np.median(clean_rent_df[i])\n",
    "\n",
    "    US_med_list.append(US_med_rent)\n",
    "\n",
    "print(US_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "471ce7a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put US med rent prices for each month and year into a DF\n",
    "US_med_df = pd.DataFrame(US_med_list, columns_list).T \n",
    "\n",
    "US_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e20c2d6c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in IL\n",
    "IL_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    IL_med_rent = np.median(IL_state_df[i])\n",
    "\n",
    "    IL_med_list.append(IL_med_rent)\n",
    "\n",
    "print(IL_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2b6d8a31",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put IL med rent prices for each month and year into a DF\n",
    "IL_med_df = pd.DataFrame(IL_med_list, columns_list).T \n",
    "\n",
    "IL_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "da76fb88",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in CA\n",
    "CA_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    CA_med_rent = np.median(CA_state_df[i])\n",
    "\n",
    "    CA_med_list.append(CA_med_rent)\n",
    "\n",
    "print(CA_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e1f6c6f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put CA med rent prices for each month and year into a DF\n",
    "CA_med_df = pd.DataFrame(CA_med_list, columns_list).T \n",
    "\n",
    "CA_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "1b760411",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in TX\n",
    "TX_med_list=[]\n",
    "for i in columns_list:\n",
    "\n",
    "    TX_med_rent = np.median(TX_state_df[i])\n",
    "\n",
    "    TX_med_list.append(TX_med_rent)\n",
    "\n",
    "print(TX_med_list)  \n",
    "\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "6220f298",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put TX med rent prices for each month and year into a DF\n",
    "TX_med_df = pd.DataFrame(TX_med_list, columns_list).T \n",
    "\n",
    "TX_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3f2ec65a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in NY\n",
    "NY_med_list=[]\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    NY_med_rent = np.median(NY_state_df[i])\n",
    "    NY_med_list.append(NY_med_rent)\n",
    "\n",
    "print(NY_med_list)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "709a34c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Put NY med rent prices for each month and year into a DF\n",
    "NY_med_df = pd.DataFrame(NY_med_list, columns_list).T \n",
    "\n",
    "NY_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "3478404b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Combined Median rent data for 4 states\n",
    "TX_CA_df = pd.concat([TX_med_df, CA_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "IL_NY_df = pd.concat([IL_med_df, NY_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "states_med_rent = pd.concat([TX_CA_df, IL_NY_df], axis=0, ignore_index=True)\n",
    "\n",
    "#0 = TX, 1 = CA, 2 = IL, 3 = NY\n",
    "states_med_rent.insert(0, \"States\", [\"TX\", \"CA\", \"IL\", \"NY\"])\n",
    "\n",
    "states_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "c080f5cc",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a table with US Med in it\n",
    "\n",
    "ALL_med_rent = pd.concat([states_med_rent, US_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "#ALL_med_rent.reset_index(drop=True)\n",
    "#ALL_med_rent.set_index('State', inplace=True, drop=True)\n",
    "#ALL_med_rent[ALL_med_rent.index[-1]] = \"US\"\n",
    "ALL_med_rent.insert(0, \"State\", [\"TX\", \"CA\", \"IL\", \"NY\", \"US\"])\n",
    "\n",
    "ALL_med_rent.drop([\"States\"], axis = 1, inplace=True)\n",
    "ALL_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "a93abd51",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for TX by year and make df\n",
    "TX_2011_rents = [1194.0, 1189.0, 1186.0, 1183.0, 1182.0, 1189.0, 1184.0, 1179.0, 1181.0, 1174.0, 1173.0, 1167.0]\n",
    "TX_2012_rents = [1164.0, 1162.0, 1165.0, 1159.0, 1155.0, 1158.0, 1168.0, 1172.0, 1177.0, 1179.0, 1173.0, 1171.0]\n",
    "TX_2013_rents = [1175.0, 1174.0, 1181.0, 1196.0, 1202.0, 1200.0, 1197.0, 1201.0, 1205.0, 1208.0, 1212.0, 1221.0]\n",
    "TX_2014_rents = [1224.0, 1224.0, 1222.0, 1225.0, 1221.0, 1218.0, 1221.0, 1234.0, 1245.0, 1256.0, 1272.0, 1275.0]\n",
    "TX_2015_rents = [1282.0, 1287.0, 1289.0, 1297.0, 1300.0, 1309.0, 1313.0, 1319.0, 1323.0, 1325.0, 1320.0, 1312.0]\n",
    "TX_2016_rents = [1313.0, 1319.0, 1326.0, 1325.0, 1338.0, 1346.0, 1350.0, 1343.0, 1340.0, 1335.0, 1335.0, 1337.0]\n",
    "\n",
    "\n",
    "TX_2011_med = np.median(TX_2011_rents)\n",
    "TX_2012_med = np.median(TX_2012_rents)\n",
    "TX_2013_med = np.median(TX_2013_rents)\n",
    "TX_2014_med = np.median(TX_2014_rents)\n",
    "TX_2015_med = np.median(TX_2015_rents)\n",
    "TX_2016_med = np.median(TX_2016_rents)\n",
    "\n",
    "TX_yearly_rent = {\"2011\":[TX_2011_med], \"2012\" :[TX_2012_med], \"2013\" :[TX_2013_med], \"2014\" :[TX_2014_med], \"2015\" :[TX_2015_med], \"2016\" :[TX_2016_med]}\n",
    "\n",
    "TX_yearly_rent_df = pd.DataFrame(TX_yearly_rent)\n",
    "\n",
    "TX_yearly_rent_df.insert(0, \"State\", [\"TX\"])\n",
    "\n",
    "TX_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "TX_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "b43d3eee",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for CA by year and make df\n",
    "CA_2011_rents = [1770.0, 1754.0, 1738.5, 1729.0, 1716.5, 1717.5, 1719.5, 1718.0, 1712.5, 1710.5, 1710.0, 1705.0]\n",
    "CA_2012_rents = [1702.5, 1695.5, 1696.5, 1697.0, 1700.5, 1713.5, 1710.5, 1709.0, 1702.0, 1704.5, 1700.0, 1701.0]\n",
    "CA_2013_rents = [1707.5, 1718.5, 1728.0, 1735.0, 1743.0, 1756.5, 1763.0, 1764.5, 1767.0, 1773.5, 1779.5, 1781.5]\n",
    "CA_2014_rents = [1782.5, 1781.0, 1785.5, 1784.5, 1787.0, 1790.0, 1794.0, 1807.5, 1824.0, 1842.5, 1859.5, 1875.0]\n",
    "CA_2015_rents = [1885.0, 1899.0, 1907.0, 1921.5, 1935.0, 1946.0, 1957.0, 1969.0, 1977.0, 1982.0, 1995.0, 2004.0]\n",
    "CA_2016_rents = [2014.5, 2036.5, 2056.0, 2062.5, 2072.0, 2092.0, 2104.0, 2115.0, 2124.5, 2128.5, 2134.0, 2150.5]\n",
    "\n",
    "CA_2011_med = np.median(CA_2011_rents)\n",
    "CA_2012_med = np.median(CA_2012_rents)\n",
    "CA_2013_med = np.median(CA_2013_rents)\n",
    "CA_2014_med = np.median(CA_2014_rents)\n",
    "CA_2015_med = np.median(CA_2015_rents)\n",
    "CA_2016_med = np.median(CA_2016_rents)\n",
    "\n",
    "CA_yearly_rent = {\"2011\":[CA_2011_med], \"2012\" :[CA_2012_med], \"2013\" :[CA_2013_med], \"2014\" :[CA_2014_med], \"2015\" :[CA_2015_med], \"2016\" :[CA_2016_med]}\n",
    "\n",
    "CA_yearly_rent_df = pd.DataFrame(CA_yearly_rent)\n",
    "\n",
    "CA_yearly_rent_df.insert(0, \"State\", [\"CA\"])\n",
    "\n",
    "CA_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "CA_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "b8acadba",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for IL by year and make df\n",
    "IL_2011_rents = [1425.0, 1426.0, 1422.5, 1421.5, 1413.5, 1406.5, 1392.5, 1382.0, 1380.0, 1370.0, 1363.5, 1355.5]\n",
    "IL_2012_rents = [1349.0, 1344.0, 1341.0, 1344.0, 1344.0, 1347.5, 1347.0, 1346.0, 1351.0, 1359.5, 1371.0, 1370.0]\n",
    "IL_2013_rents = [1364.5, 1351.5, 1345.5, 1347.0, 1354.0, 1360.0, 1363.0, 1364.5, 1372.5, 1379.0, 1385.5, 1392.0]\n",
    "IL_2014_rents = [1399.0, 1400.5, 1395.0, 1393.0, 1387.0, 1385.5, 1379.5, 1384.0, 1385.0, 1386.5, 1397.0, 1406.5]\n",
    "IL_2015_rents = [1411.5, 1408.0, 1416.5, 1414.5, 1413.0, 1413.0, 1414.5, 1414.0, 1411.0, 1403.0, 1398.5, 1396.0]\n",
    "IL_2016_rents = [1405.5, 1408.0, 1413.0, 1416.5, 1424.5, 1424.0, 1431.0, 1426.5, 1418.0, 1410.0, 1405.0, 1397.0]\n",
    "\n",
    "IL_2011_med = np.median(IL_2011_rents)\n",
    "IL_2012_med = np.median(IL_2012_rents)\n",
    "IL_2013_med = np.median(IL_2013_rents)\n",
    "IL_2014_med = np.median(IL_2014_rents)\n",
    "IL_2015_med = np.median(IL_2015_rents)\n",
    "IL_2016_med = np.median(IL_2016_rents)\n",
    "\n",
    "IL_yearly_rent = {\"2011\":[IL_2011_med], \"2012\" :[IL_2012_med], \"2013\" :[IL_2013_med], \"2014\" :[IL_2014_med], \"2015\" :[IL_2015_med], \"2016\" :[IL_2016_med]}\n",
    "\n",
    "IL_yearly_rent_df = pd.DataFrame(IL_yearly_rent)\n",
    "\n",
    "IL_yearly_rent_df.insert(0, \"State\", [\"IL\"])\n",
    "\n",
    "IL_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "IL_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "1638a515",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for NY by year and make df\n",
    "NY_2011_rents = [1369.5, 1383.5, 1380.5, 1388.0, 1390.5, 1401.0, 1401.0, 1399.0, 1397.0, 1399.0, 1400.5, 1399.0]\n",
    "NY_2012_rents = [1391.5, 1383.0, 1376.0, 1378.0, 1396.0, 1411.0, 1428.5, 1438.0, 1437.5, 1431.0, 1417.5, 1416.0]\n",
    "NY_2013_rents = [1419.5, 1432.0, 1434.0, 1431.5, 1434.0, 1418.5, 1384.5, 1368.5, 1366.5, 1379.0, 1398.5, 1395.0]\n",
    "NY_2014_rents = [1378.5, 1360.0, 1357.5, 1351.0, 1341.0, 1342.0, 1362.5, 1382.0, 1400.5, 1410.0, 1418.5, 1430.0]\n",
    "NY_2015_rents = [1440.5, 1443.0, 1449.0, 1448.5, 1444.5, 1437.5, 1428.5, 1403.0, 1388.5, 1376.0, 1371.5, 1363.0]\n",
    "NY_2016_rents = [1368.0, 1365.0, 1374.5, 1380.0, 1385.5, 1390.5, 1401.5, 1399.0, 1394.5, 1392.5, 1389.5, 1386.5]\n",
    "\n",
    "NY_2011_med = np.median(NY_2011_rents)\n",
    "NY_2012_med = np.median(NY_2012_rents)\n",
    "NY_2013_med = np.median(NY_2013_rents)\n",
    "NY_2014_med = np.median(NY_2014_rents)\n",
    "NY_2015_med = np.median(NY_2015_rents)\n",
    "NY_2016_med = np.median(NY_2016_rents)\n",
    "\n",
    "NY_yearly_rent = {\"2011\":[NY_2011_med], \"2012\" :[NY_2012_med], \"2013\" :[NY_2013_med], \"2014\" :[NY_2014_med], \"2015\" :[NY_2015_med], \"2016\" :[NY_2016_med]}\n",
    "\n",
    "NY_yearly_rent_df = pd.DataFrame(NY_yearly_rent)\n",
    "\n",
    "NY_yearly_rent_df.insert(0, \"State\", [\"NY\"])\n",
    "\n",
    "NY_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "NY_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "f3e349d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for US by year and make df\n",
    "US_2011_rents = [1218.0, 1219.0, 1220.0, 1220.0, 1218.0, 1217.0, 1214.0, 1213.0, 1210.0, 1207.0, 1206.0, 1205.0]\n",
    "US_2012_rents = [1204.0, 1205.0, 1207.0, 1206.0, 1205.0, 1205.0, 1205.0, 1206.0, 1208.0, 1210.0, 1215.0, 1215.0]\n",
    "US_2013_rents = [1215.0, 1216.0, 1217.0, 1217.0, 1218.0, 1221.0, 1224.0, 1225.0, 1228.0, 1231.0, 1235.0, 1236.0]\n",
    "US_2014_rents = [1236.0, 1234.0, 1232.0, 1229.0, 1227.0, 1223.0, 1226.0, 1232.0, 1245.0, 1253.0, 1259.0, 1263.0]\n",
    "US_2015_rents = [1269.0, 1272.0, 1276.0, 1280.0, 1284.0, 1289.0, 1295.0, 1299.0, 1298.0, 1294.0, 1293.0, 1292.0]\n",
    "US_2016_rents = [1294.0, 1298.0, 1303.0, 1308.0, 1312.0, 1313.0, 1311.0, 1306.0, 1305.0, 1305.0, 1307.0, 1308.0]\n",
    "\n",
    "US_2011_med = np.median(US_2011_rents)\n",
    "US_2012_med = np.median(US_2012_rents)\n",
    "US_2013_med = np.median(US_2013_rents)\n",
    "US_2014_med = np.median(US_2014_rents)\n",
    "US_2015_med = np.median(US_2015_rents)\n",
    "US_2016_med = np.median(US_2016_rents)\n",
    "\n",
    "US_yearly_rent = {\"2011\":[US_2011_med], \"2012\" :[US_2012_med], \"2013\" :[US_2013_med], \"2014\" :[US_2014_med], \"2015\" :[US_2015_med], \"2016\" :[US_2016_med]}\n",
    "\n",
    "US_yearly_rent_df = pd.DataFrame(US_yearly_rent)\n",
    "\n",
    "US_yearly_rent_df.insert(0, \"State\", [\"US\"])\n",
    "\n",
    "US_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "US_yearly_rent_df.head(10)\n",
    "\n",
    "#ayear = [2011,2012,2013,2014,2015,2016]\n",
    "#rent_cost = [US_2011_med,US_2012_med,US_2013_med,US_2014_med,US_2015_med,US_2016_med]\n",
    "#correlation = st.pearsonr(rent_cost,year)\n",
    "#print(f\"The correlation between both factors is {round(correlation[0],2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "6953ff5d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.show()\n",
    "#plt.savefig('Visulaizations Outputs\\US_Rent_graph.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "ebbb7276",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dependencies and Set Up\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as st\n",
    "from scipy.stats import linregress\n",
    "import seaborn as sns  # For heatmap visualization\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "e85e3e20",
   "metadata": {},
   "outputs": [],
   "source": [
    "%notebook widget"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "6f136495",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a path to the file making it into a dataframe\n",
    "rent_file = pd.read_csv(\"Raw_Price_Data//price.csv\")\n",
    "\n",
    "rent_df = pd.DataFrame(rent_file)\n",
    "\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "111de343",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Identified what columns are missing data\n",
    "clean_rent_df = rent_df.dropna(how = 'any')\n",
    "\n",
    "clean_rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "d7d4d6ea",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Extracted states from data (CA, IL, NY, TX)\n",
    "four_states = [\"NY\", \"CA\", \"IL\", \"TX\"]\n",
    "\n",
    "four_states_df = rent_df[rent_df['State'].isin(four_states)]\n",
    "\n",
    "four_states_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "2d1dc9a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dropped all NaN values\n",
    "rent_df.dropna(inplace = True)\n",
    "\n",
    "#Display the DataFrame\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "0f1b2107",
   "metadata": {},
   "outputs": [],
   "source": [
    "#New York Data Frame\n",
    "NY_state = [\"NY\"]\n",
    "\n",
    "NY_state_df = rent_df[rent_df['State'].isin(NY_state)]\n",
    "\n",
    "NY_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "8ccc96fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "#California Data Frame\n",
    "CA_state = [\"CA\"]\n",
    "\n",
    "CA_state_df = rent_df[rent_df['State'].isin(CA_state)]\n",
    "\n",
    "CA_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "d5e14c58",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Illinois Data Frame\n",
    "IL_state = [\"IL\"]\n",
    "\n",
    "IL_state_df = rent_df[rent_df['State'].isin(IL_state)]\n",
    "\n",
    "IL_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "20cb4fd9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Texas Data Frame\n",
    "TX_state = [\"TX\"]\n",
    "\n",
    "TX_state_df = rent_df[rent_df['State'].isin(TX_state)]\n",
    "\n",
    "TX_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "b5df1e12",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Made all of the columns into a list\n",
    "columns_list = ['January 2011',\n",
    "'February 2011','March 2011','April 2011','May 2011','June 2011','July 2011',\n",
    "'August 2011','September 2011','October 2011','November 2011','December 2011',\n",
    "'January 2012','February 2012','March 2012','April 2012','May 2012','June 2012',\n",
    "'July 2012','August 2012','September 2012','October 2012','November 2012','December 2012',\n",
    "'January 2013','February 2013','March 2013','April 2013','May 2013','June 2013','July 2013',\n",
    "'August 2013','September 2013','October 2013','November 2013','December 2013','January 2014',\n",
    "'February 2014','March 2014','April 2014','May 2014','June 2014','July 2014','August 2014',\n",
    "'September 2014','October 2014','November 2014','December 2014','January 2015','February 2015',\n",
    "'March 2015','April 2015','May 2015','June 2015','July 2015','August 2015','September 2015','October 2015',\n",
    "'November 2015','December 2015','January 2016','February 2016','March 2016','April 2016','May 2016',\n",
    "'June 2016','July 2016','August 2016','September 2016','October 2016','November 2016','December 2016']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "c745c8a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# US median rent prices\n",
    "US_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    US_med_rent = np.median(clean_rent_df[i])\n",
    "\n",
    "    US_med_list.append(US_med_rent)\n",
    "\n",
    "print(US_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c962c734",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put US med rent prices for each month and year into a DF\n",
    "US_med_df = pd.DataFrame(US_med_list, columns_list).T \n",
    "\n",
    "US_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "3f6d4177",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in IL\n",
    "IL_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    IL_med_rent = np.median(IL_state_df[i])\n",
    "\n",
    "    IL_med_list.append(IL_med_rent)\n",
    "\n",
    "print(IL_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "123fd17f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put IL med rent prices for each month and year into a DF\n",
    "IL_med_df = pd.DataFrame(IL_med_list, columns_list).T \n",
    "\n",
    "IL_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "58dfd86b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in CA\n",
    "CA_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    CA_med_rent = np.median(CA_state_df[i])\n",
    "\n",
    "    CA_med_list.append(CA_med_rent)\n",
    "\n",
    "print(CA_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "779baac9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put CA med rent prices for each month and year into a DF\n",
    "CA_med_df = pd.DataFrame(CA_med_list, columns_list).T \n",
    "\n",
    "CA_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "873fa699",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in TX\n",
    "TX_med_list=[]\n",
    "for i in columns_list:\n",
    "\n",
    "    TX_med_rent = np.median(TX_state_df[i])\n",
    "\n",
    "    TX_med_list.append(TX_med_rent)\n",
    "\n",
    "print(TX_med_list)  \n",
    "\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "a55d319c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put TX med rent prices for each month and year into a DF\n",
    "TX_med_df = pd.DataFrame(TX_med_list, columns_list).T \n",
    "\n",
    "TX_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "bc2a999e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in NY\n",
    "NY_med_list=[]\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    NY_med_rent = np.median(NY_state_df[i])\n",
    "    NY_med_list.append(NY_med_rent)\n",
    "\n",
    "print(NY_med_list)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "f974140f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Put NY med rent prices for each month and year into a DF\n",
    "NY_med_df = pd.DataFrame(NY_med_list, columns_list).T \n",
    "\n",
    "NY_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "81e5a92f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Combined Median rent data for 4 states\n",
    "TX_CA_df = pd.concat([TX_med_df, CA_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "IL_NY_df = pd.concat([IL_med_df, NY_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "states_med_rent = pd.concat([TX_CA_df, IL_NY_df], axis=0, ignore_index=True)\n",
    "\n",
    "#0 = TX, 1 = CA, 2 = IL, 3 = NY\n",
    "states_med_rent.insert(0, \"States\", [\"TX\", \"CA\", \"IL\", \"NY\"])\n",
    "\n",
    "states_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "b31b6c62",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a table with US Med in it\n",
    "\n",
    "ALL_med_rent = pd.concat([states_med_rent, US_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "#ALL_med_rent.reset_index(drop=True)\n",
    "#ALL_med_rent.set_index('State', inplace=True, drop=True)\n",
    "#ALL_med_rent[ALL_med_rent.index[-1]] = \"US\"\n",
    "ALL_med_rent.insert(0, \"State\", [\"TX\", \"CA\", \"IL\", \"NY\", \"US\"])\n",
    "\n",
    "ALL_med_rent.drop([\"States\"], axis = 1, inplace=True)\n",
    "ALL_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "46c75435",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for TX by year and make df\n",
    "TX_2011_rents = [1194.0, 1189.0, 1186.0, 1183.0, 1182.0, 1189.0, 1184.0, 1179.0, 1181.0, 1174.0, 1173.0, 1167.0]\n",
    "TX_2012_rents = [1164.0, 1162.0, 1165.0, 1159.0, 1155.0, 1158.0, 1168.0, 1172.0, 1177.0, 1179.0, 1173.0, 1171.0]\n",
    "TX_2013_rents = [1175.0, 1174.0, 1181.0, 1196.0, 1202.0, 1200.0, 1197.0, 1201.0, 1205.0, 1208.0, 1212.0, 1221.0]\n",
    "TX_2014_rents = [1224.0, 1224.0, 1222.0, 1225.0, 1221.0, 1218.0, 1221.0, 1234.0, 1245.0, 1256.0, 1272.0, 1275.0]\n",
    "TX_2015_rents = [1282.0, 1287.0, 1289.0, 1297.0, 1300.0, 1309.0, 1313.0, 1319.0, 1323.0, 1325.0, 1320.0, 1312.0]\n",
    "TX_2016_rents = [1313.0, 1319.0, 1326.0, 1325.0, 1338.0, 1346.0, 1350.0, 1343.0, 1340.0, 1335.0, 1335.0, 1337.0]\n",
    "\n",
    "\n",
    "TX_2011_med = np.median(TX_2011_rents)\n",
    "TX_2012_med = np.median(TX_2012_rents)\n",
    "TX_2013_med = np.median(TX_2013_rents)\n",
    "TX_2014_med = np.median(TX_2014_rents)\n",
    "TX_2015_med = np.median(TX_2015_rents)\n",
    "TX_2016_med = np.median(TX_2016_rents)\n",
    "\n",
    "TX_yearly_rent = {\"2011\":[TX_2011_med], \"2012\" :[TX_2012_med], \"2013\" :[TX_2013_med], \"2014\" :[TX_2014_med], \"2015\" :[TX_2015_med], \"2016\" :[TX_2016_med]}\n",
    "\n",
    "TX_yearly_rent_df = pd.DataFrame(TX_yearly_rent)\n",
    "\n",
    "TX_yearly_rent_df.insert(0, \"State\", [\"TX\"])\n",
    "\n",
    "TX_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "TX_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "fad91331",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for CA by year and make df\n",
    "CA_2011_rents = [1770.0, 1754.0, 1738.5, 1729.0, 1716.5, 1717.5, 1719.5, 1718.0, 1712.5, 1710.5, 1710.0, 1705.0]\n",
    "CA_2012_rents = [1702.5, 1695.5, 1696.5, 1697.0, 1700.5, 1713.5, 1710.5, 1709.0, 1702.0, 1704.5, 1700.0, 1701.0]\n",
    "CA_2013_rents = [1707.5, 1718.5, 1728.0, 1735.0, 1743.0, 1756.5, 1763.0, 1764.5, 1767.0, 1773.5, 1779.5, 1781.5]\n",
    "CA_2014_rents = [1782.5, 1781.0, 1785.5, 1784.5, 1787.0, 1790.0, 1794.0, 1807.5, 1824.0, 1842.5, 1859.5, 1875.0]\n",
    "CA_2015_rents = [1885.0, 1899.0, 1907.0, 1921.5, 1935.0, 1946.0, 1957.0, 1969.0, 1977.0, 1982.0, 1995.0, 2004.0]\n",
    "CA_2016_rents = [2014.5, 2036.5, 2056.0, 2062.5, 2072.0, 2092.0, 2104.0, 2115.0, 2124.5, 2128.5, 2134.0, 2150.5]\n",
    "\n",
    "CA_2011_med = np.median(CA_2011_rents)\n",
    "CA_2012_med = np.median(CA_2012_rents)\n",
    "CA_2013_med = np.median(CA_2013_rents)\n",
    "CA_2014_med = np.median(CA_2014_rents)\n",
    "CA_2015_med = np.median(CA_2015_rents)\n",
    "CA_2016_med = np.median(CA_2016_rents)\n",
    "\n",
    "CA_yearly_rent = {\"2011\":[CA_2011_med], \"2012\" :[CA_2012_med], \"2013\" :[CA_2013_med], \"2014\" :[CA_2014_med], \"2015\" :[CA_2015_med], \"2016\" :[CA_2016_med]}\n",
    "\n",
    "CA_yearly_rent_df = pd.DataFrame(CA_yearly_rent)\n",
    "\n",
    "CA_yearly_rent_df.insert(0, \"State\", [\"CA\"])\n",
    "\n",
    "CA_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "CA_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "01834b25",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for IL by year and make df\n",
    "IL_2011_rents = [1425.0, 1426.0, 1422.5, 1421.5, 1413.5, 1406.5, 1392.5, 1382.0, 1380.0, 1370.0, 1363.5, 1355.5]\n",
    "IL_2012_rents = [1349.0, 1344.0, 1341.0, 1344.0, 1344.0, 1347.5, 1347.0, 1346.0, 1351.0, 1359.5, 1371.0, 1370.0]\n",
    "IL_2013_rents = [1364.5, 1351.5, 1345.5, 1347.0, 1354.0, 1360.0, 1363.0, 1364.5, 1372.5, 1379.0, 1385.5, 1392.0]\n",
    "IL_2014_rents = [1399.0, 1400.5, 1395.0, 1393.0, 1387.0, 1385.5, 1379.5, 1384.0, 1385.0, 1386.5, 1397.0, 1406.5]\n",
    "IL_2015_rents = [1411.5, 1408.0, 1416.5, 1414.5, 1413.0, 1413.0, 1414.5, 1414.0, 1411.0, 1403.0, 1398.5, 1396.0]\n",
    "IL_2016_rents = [1405.5, 1408.0, 1413.0, 1416.5, 1424.5, 1424.0, 1431.0, 1426.5, 1418.0, 1410.0, 1405.0, 1397.0]\n",
    "\n",
    "IL_2011_med = np.median(IL_2011_rents)\n",
    "IL_2012_med = np.median(IL_2012_rents)\n",
    "IL_2013_med = np.median(IL_2013_rents)\n",
    "IL_2014_med = np.median(IL_2014_rents)\n",
    "IL_2015_med = np.median(IL_2015_rents)\n",
    "IL_2016_med = np.median(IL_2016_rents)\n",
    "\n",
    "IL_yearly_rent = {\"2011\":[IL_2011_med], \"2012\" :[IL_2012_med], \"2013\" :[IL_2013_med], \"2014\" :[IL_2014_med], \"2015\" :[IL_2015_med], \"2016\" :[IL_2016_med]}\n",
    "\n",
    "IL_yearly_rent_df = pd.DataFrame(IL_yearly_rent)\n",
    "\n",
    "IL_yearly_rent_df.insert(0, \"State\", [\"IL\"])\n",
    "\n",
    "IL_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "IL_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "cd556bc3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for NY by year and make df\n",
    "NY_2011_rents = [1369.5, 1383.5, 1380.5, 1388.0, 1390.5, 1401.0, 1401.0, 1399.0, 1397.0, 1399.0, 1400.5, 1399.0]\n",
    "NY_2012_rents = [1391.5, 1383.0, 1376.0, 1378.0, 1396.0, 1411.0, 1428.5, 1438.0, 1437.5, 1431.0, 1417.5, 1416.0]\n",
    "NY_2013_rents = [1419.5, 1432.0, 1434.0, 1431.5, 1434.0, 1418.5, 1384.5, 1368.5, 1366.5, 1379.0, 1398.5, 1395.0]\n",
    "NY_2014_rents = [1378.5, 1360.0, 1357.5, 1351.0, 1341.0, 1342.0, 1362.5, 1382.0, 1400.5, 1410.0, 1418.5, 1430.0]\n",
    "NY_2015_rents = [1440.5, 1443.0, 1449.0, 1448.5, 1444.5, 1437.5, 1428.5, 1403.0, 1388.5, 1376.0, 1371.5, 1363.0]\n",
    "NY_2016_rents = [1368.0, 1365.0, 1374.5, 1380.0, 1385.5, 1390.5, 1401.5, 1399.0, 1394.5, 1392.5, 1389.5, 1386.5]\n",
    "\n",
    "NY_2011_med = np.median(NY_2011_rents)\n",
    "NY_2012_med = np.median(NY_2012_rents)\n",
    "NY_2013_med = np.median(NY_2013_rents)\n",
    "NY_2014_med = np.median(NY_2014_rents)\n",
    "NY_2015_med = np.median(NY_2015_rents)\n",
    "NY_2016_med = np.median(NY_2016_rents)\n",
    "\n",
    "NY_yearly_rent = {\"2011\":[NY_2011_med], \"2012\" :[NY_2012_med], \"2013\" :[NY_2013_med], \"2014\" :[NY_2014_med], \"2015\" :[NY_2015_med], \"2016\" :[NY_2016_med]}\n",
    "\n",
    "NY_yearly_rent_df = pd.DataFrame(NY_yearly_rent)\n",
    "\n",
    "NY_yearly_rent_df.insert(0, \"State\", [\"NY\"])\n",
    "\n",
    "NY_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "NY_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "34c4d475",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for US by year and make df\n",
    "US_2011_rents = [1218.0, 1219.0, 1220.0, 1220.0, 1218.0, 1217.0, 1214.0, 1213.0, 1210.0, 1207.0, 1206.0, 1205.0]\n",
    "US_2012_rents = [1204.0, 1205.0, 1207.0, 1206.0, 1205.0, 1205.0, 1205.0, 1206.0, 1208.0, 1210.0, 1215.0, 1215.0]\n",
    "US_2013_rents = [1215.0, 1216.0, 1217.0, 1217.0, 1218.0, 1221.0, 1224.0, 1225.0, 1228.0, 1231.0, 1235.0, 1236.0]\n",
    "US_2014_rents = [1236.0, 1234.0, 1232.0, 1229.0, 1227.0, 1223.0, 1226.0, 1232.0, 1245.0, 1253.0, 1259.0, 1263.0]\n",
    "US_2015_rents = [1269.0, 1272.0, 1276.0, 1280.0, 1284.0, 1289.0, 1295.0, 1299.0, 1298.0, 1294.0, 1293.0, 1292.0]\n",
    "US_2016_rents = [1294.0, 1298.0, 1303.0, 1308.0, 1312.0, 1313.0, 1311.0, 1306.0, 1305.0, 1305.0, 1307.0, 1308.0]\n",
    "\n",
    "US_2011_med = np.median(US_2011_rents)\n",
    "US_2012_med = np.median(US_2012_rents)\n",
    "US_2013_med = np.median(US_2013_rents)\n",
    "US_2014_med = np.median(US_2014_rents)\n",
    "US_2015_med = np.median(US_2015_rents)\n",
    "US_2016_med = np.median(US_2016_rents)\n",
    "\n",
    "US_yearly_rent = {\"2011\":[US_2011_med], \"2012\" :[US_2012_med], \"2013\" :[US_2013_med], \"2014\" :[US_2014_med], \"2015\" :[US_2015_med], \"2016\" :[US_2016_med]}\n",
    "\n",
    "US_yearly_rent_df = pd.DataFrame(US_yearly_rent)\n",
    "\n",
    "US_yearly_rent_df.insert(0, \"State\", [\"US\"])\n",
    "\n",
    "US_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "US_yearly_rent_df.head(10)\n",
    "\n",
    "#ayear = [2011,2012,2013,2014,2015,2016]\n",
    "#rent_cost = [US_2011_med,US_2012_med,US_2013_med,US_2014_med,US_2015_med,US_2016_med]\n",
    "#correlation = st.pearsonr(rent_cost,year)\n",
    "#print(f\"The correlation between both factors is {round(correlation[0],2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "aeda8265",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.show()\n",
    "#plt.savefig('Visulaizations Outputs\\US_Rent_graph.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "3270c581",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Combined yearly rents in to one df\n",
    "TX_CA_yearly_rent_df = pd.concat([TX_yearly_rent_df, CA_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "TX_CA_yearly_rent_df\n",
    "\n",
    "IL_NY_yearly_rent_df = pd.concat([IL_yearly_rent_df, NY_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "IL_NY_yearly_rent_df\n",
    "\n",
    "states_yearly_rent_df = pd.concat([TX_CA_yearly_rent_df, IL_NY_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "states_yearly_rent_df\n",
    "\n",
    "ALL_yearly_rent_df = pd.concat([states_yearly_rent_df, US_yearly_rent_df], axis=0, ignore_index = True)\n",
    "#0 = TX, 1 = CA, 2 = IL, 3 = NY\n",
    "\n",
    "ALL_yearly_rent_df.insert(0, \"State\", ['TX', 'CA', 'IL', 'NY', 'US'])\n",
    "\n",
    "ALL_yearly_rent_df.set_index(['State'], drop=True, append=False, inplace=True, verify_integrity=False)\n",
    "#ALL_yearly_rent_df.reset_index()\n",
    "\n",
    "ALL_yearly_rent_df['Rent Change (%)'] = ((ALL_yearly_rent_df[['2011', '2016']].pct_change(axis=1)['2016'])* 100).round(2)\n",
    "\n",
    "ALL_yearly_rent_df.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "c47c6929",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph showing all 4 states median rent prices throughout timeframe 2011-2016\n",
    "\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"]\n",
    "\n",
    "TX_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"TX\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"Texas\", color=\"blue\") \n",
    "\n",
    "CA_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"CA\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"California\", color=\"orange\") \n",
    "\n",
    "IL_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"IL\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"Illinois\", color=\"green\") \n",
    "\n",
    "NY_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"NY\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"New York\", color=\"red\") \n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "legend_list = [\"TX\", \"CA\", \"IL\", \"NY\", \"US\"]\n",
    "plt.legend([\"TX\", \"CA\", \"IL\", \"NY\", \"US\"], loc=\"best\")\n",
    "\n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "plt.title(\"US, TX, CA, IL, NY Median Rent Prices 2011-2016\")\n",
    "plt.savefig('Visualizations Outputs\\All_Rent_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "1870c011",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Bar graph showing the change in rent (%)\n",
    "rent_change_bar = ALL_yearly_rent_df['Rent Change (%)'].plot(kind=\"bar\", color=[\"blue\", \"orange\", \"green\", \"red\", \"purple\"], figsize=(8,6),\n",
    "                                   title=\"Rent Change by State (%)\",\n",
    "                                   xlabel=\"State\",\n",
    "                                   ylabel=\"Percent of Change\")\n",
    "rent_change_bar.axhline(y=0, color= 'black', linewidth=1,)\n",
    "\n",
    "plt.savefig('Visualizations Outputs\\Change_Rent_graph.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "d55047c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "year = [2011,2011, 2011, 2011, 2012, 2012, 2012, 2012, 2013, 2013, 2013, 2013, 2014, 2014, 2014, 2014, 2015, 2015, 2015, 2015, 2016, 2016, 2016, 2016]\n",
    "rent_cost = [1182.50,1717.75,1399.50,1398.00, 1166.50,1701.50,1347.25,1413.50,1200.50,1759.75,1363.75,1408.50,1224.5,1792.0,1390.0,1370.5,1310.50,1951.50,1412.25,1433.00,1336.00,2098.00,1414.75,1388.00]\n",
    "correlation = st.pearsonr(rent_cost,year)\n",
    "print(f\"The correlation between both factors is {round(correlation[0],2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "ddd341a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Box plot for data\n",
    "\n",
    "rents_data = pd.DataFrame({\"TX\": [1182.50,1166.50,1200.50,1224.5,1310.50,1336.00], \"CA\": [1717.75,1701.50,1759.75,1792.0,1951.50,2098.00], \n",
    "\"IL\": [1399.50,1347.25,1363.75,1390.0,1412.25,1414.75], \"NY\": [1398.00,1413.50,1408.50,1370.5,1433.00,1388.00], \"US\": [1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]})\n",
    "\n",
    "# Plot the dataframe\n",
    "ax = rents_data[['TX', 'CA', 'IL', 'NY', 'US']].plot(kind='box', title='Boxplot')\n",
    "\n",
    "# Display the plot\n",
    "plt.savefig('Visualizations Outputs\\Boxplot_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "4b3a1390",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Using Chi Square Test for change in rent\n",
    "CA_obs = pd.Series([1717.75,1701.50,1759.75,1792.0,1951.50,2098.00], index=[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"])\n",
    "#[1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]\n",
    "\n",
    "CA_Chi_SQ_df = pd.DataFrame(CA_obs)\n",
    "\n",
    "CA_Chi_SQ_df[1] = [1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]\n",
    "\n",
    "CA_Chi_SQ_df.columns = [\"CA Observed\", \"Expected\"]\n",
    "\n",
    "CA_Chi_SQ_df.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "3790b8c7",
   "metadata": {},
   "outputs": [],
   "source": [
    "critical_value = st.chi2.ppf(q = 0.95, df = 5)\n",
    "critical_value"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "a98777e1",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "CA_Chi_SQ_df_scaled = scaler.fit_transform(CA_Chi_SQ_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "99cd2f8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "CA_Chi_SQ_df_scaled[:,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "2bf45c03",
   "metadata": {},
   "outputs": [],
   "source": [
    "st.chisquare(CA_Chi_SQ_df_scaled[:,0], CA_Chi_SQ_df_scaled[:,1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "9e0d0b7d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# New dataframe where the states are the columns\n",
    "# New dataframe where the states are the columns\n",
    "ALL_yearly_rent_df_t= ALL_yearly_rent_df[[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"]].T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "144520ff",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Histogram\n",
    "labels = []\n",
    "for state in ALL_yearly_rent_df_t.columns:\n",
    "    plt.hist(ALL_yearly_rent_df_t[state]) \n",
    "    labels.append(state)\n",
    "\n",
    "    plt.xlabel('Rent Values')\n",
    "    plt.ylabel('Frequency')\n",
    "    # plt.title('Histogram of Rent')\n",
    "    \n",
    "plt.legend(labels)\n",
    "plt.savefig('Visualizations Outputs\\Histogram.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "ac7722b0",
   "metadata": {},
   "outputs": [],
   "source": [
    "summary_stats = ALL_yearly_rent_df_t.describe()\n",
    "summary_stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "9e9dd32e",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quartiles and outliers\n",
    "quartiles_columns = ALL_yearly_rent_df_t.columns\n",
    "\n",
    "for column in quartiles_columns:\n",
    "    quartiles = np.percentile(ALL_yearly_rent_df_t[column], [25, 50, 75])\n",
    "    lower_q = np.percentile(ALL_yearly_rent_df_t, 25)\n",
    "    upper_q = np.percentile(ALL_yearly_rent_df_t, 75)\n",
    "\n",
    "    IQR = upper_q - lower_q\n",
    "\n",
    "    lower_bound = lower_q - 1.5 * IQR\n",
    "    upper_bound = upper_q + 1.5 * IQR\n",
    "\n",
    "    outliers = ALL_yearly_rent_df_t.loc[(ALL_yearly_rent_df_t[column] < lower_bound) | (ALL_yearly_rent_df_t[column] > upper_bound)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "1d1a01c5",
   "metadata": {},
   "outputs": [],
   "source": [
    "summary_stats = ALL_yearly_rent_df_t.describe()\n",
    "summary_stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "d8d52bd4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show USA median rent data over time\n",
    "\n",
    "USAdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":US_med_list\n",
    "}\n",
    "\n",
    "USAdf=pd.DataFrame(USAdata)\n",
    "\n",
    "USAdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"USA Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "# plt.savefig('Visualizations Outputs\\US_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "07802ca8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show IL median rent data over time\n",
    "illinoisdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":IL_med_list\n",
    "}\n",
    "\n",
    "illinoisdf=pd.DataFrame(illinoisdata)\n",
    "\n",
    "illinoisdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"Illinois Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\IL_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "id": "75306ef9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show CA median rent data overtime\n",
    "californiadata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":CA_med_list\n",
    "}\n",
    "\n",
    "californiadf=pd.DataFrame(californiadata)\n",
    "\n",
    "californiadf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"California Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "aa6ccaca",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show Texas median rent data overtime\n",
    "texasdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":TX_med_list\n",
    "}\n",
    "\n",
    "texasdf=pd.DataFrame(texasdata)\n",
    "\n",
    "texasdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"Texas Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "93b531b7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "3b645cb7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show USA median rent data over time\n",
    "\n",
    "USAdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":US_med_list\n",
    "}\n",
    "\n",
    "USAdf=pd.DataFrame(USAdata)\n",
    "\n",
    "USAdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"USA Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\US_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "id": "b5dc78be",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show USA median rent data over time\n",
    "\n",
    "USAdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":US_med_list\n",
    "}\n",
    "\n",
    "USAdf=pd.DataFrame(USAdata)\n",
    "\n",
    "USAdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"USA Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\USA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "e8d739ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show USA median rent data over time\n",
    "\n",
    "USAdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":US_med_list\n",
    "}\n",
    "\n",
    "USAdf=pd.DataFrame(USAdata)\n",
    "\n",
    "USAdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"USA Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\USA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "c6990ec8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show CA median rent data overtime\n",
    "californiadata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":CA_med_list\n",
    "}\n",
    "\n",
    "californiadf=pd.DataFrame(californiadata)\n",
    "\n",
    "californiadf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"California Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\CA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "65d23632",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show Texas median rent data overtime\n",
    "texasdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":TX_med_list\n",
    "}\n",
    "\n",
    "texasdf=pd.DataFrame(texasdata)\n",
    "\n",
    "texasdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"Texas Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\TX_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "8001f096",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "adebbcf7",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "# newyorkdata={\n",
    "#     \"Dates\":columns_list,\n",
    "#     \"Prices\":NY_med_list\n",
    "# }\n",
    "\n",
    "# newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# # texasdf.head()\n",
    "\n",
    "# newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# # plt.grid(True)\n",
    "# plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "# plt.xlabel(\"Mos/Year\")\n",
    "# plt.xticks(rotation=90)\n",
    "# plt.ylabel(\"Rent Cost ($)\")\n",
    "# plt.savefig('Visualizations Outputs\\NY_Scatter.png')\n",
    "# plt.show()\n",
    "\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "99e820da",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "4f0516a3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "# plt.savefig('Visualizations Outputs\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "37a07592",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show USA median rent data over time\n",
    "\n",
    "USAdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":US_med_list\n",
    "}\n",
    "\n",
    "USAdf=pd.DataFrame(USAdata)\n",
    "\n",
    "USAdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"USA Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "# plt.savefig('Visualizations Outputs\\USA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "71855a7a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "2edcf20d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "de33d102",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show USA median rent data over time\n",
    "\n",
    "USAdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":US_med_list\n",
    "}\n",
    "\n",
    "USAdf=pd.DataFrame(USAdata)\n",
    "\n",
    "USAdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"USA Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "# plt.savefig('Visualizations Outputs\\\\USA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "78440359",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show USA median rent data over time\n",
    "\n",
    "USAdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":US_med_list\n",
    "}\n",
    "\n",
    "USAdf=pd.DataFrame(USAdata)\n",
    "\n",
    "USAdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"USA Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\\\USA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "id": "ee721421",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Quartiles and Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "id": "b3e5593f",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Quartiles and Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "edcce010",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Quartiles, Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "780c2762",
   "metadata": {},
   "outputs": [],
   "source": [
    "## Quartiles, Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "ac17a0df",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.show()\n",
    "#plt.savefig('Visulaizations Outputs\\US_Rent_graph.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "180528d3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#gfrg"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "ed3d7722",
   "metadata": {},
   "outputs": [],
   "source": [
    "#M"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "id": "2dcac168",
   "metadata": {},
   "outputs": [],
   "source": [
    "##Outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "54de6a28",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dependencies and Set Up\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as st\n",
    "from scipy.stats import linregress\n",
    "import seaborn as sns  # For heatmap visualization\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "32b35bbd",
   "metadata": {},
   "outputs": [],
   "source": [
    "%notebook widget"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "4b78c35b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a path to the file making it into a dataframe\n",
    "rent_file = pd.read_csv(\"Raw_Price_Data//price.csv\")\n",
    "\n",
    "rent_df = pd.DataFrame(rent_file)\n",
    "\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "76006b31",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Identified what columns are missing data\n",
    "clean_rent_df = rent_df.dropna(how = 'any')\n",
    "\n",
    "clean_rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "d0c4eb23",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Extracted states from data (CA, IL, NY, TX)\n",
    "four_states = [\"NY\", \"CA\", \"IL\", \"TX\"]\n",
    "\n",
    "four_states_df = rent_df[rent_df['State'].isin(four_states)]\n",
    "\n",
    "four_states_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "e124e85c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dropped all NaN values\n",
    "rent_df.dropna(inplace = True)\n",
    "\n",
    "#Display the DataFrame\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "94139d2e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#New York Data Frame\n",
    "NY_state = [\"NY\"]\n",
    "\n",
    "NY_state_df = rent_df[rent_df['State'].isin(NY_state)]\n",
    "\n",
    "NY_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "af1e29fc",
   "metadata": {},
   "outputs": [],
   "source": [
    "#California Data Frame\n",
    "CA_state = [\"CA\"]\n",
    "\n",
    "CA_state_df = rent_df[rent_df['State'].isin(CA_state)]\n",
    "\n",
    "CA_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "id": "050c9ec0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Illinois Data Frame\n",
    "IL_state = [\"IL\"]\n",
    "\n",
    "IL_state_df = rent_df[rent_df['State'].isin(IL_state)]\n",
    "\n",
    "IL_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "052ecd00",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Texas Data Frame\n",
    "TX_state = [\"TX\"]\n",
    "\n",
    "TX_state_df = rent_df[rent_df['State'].isin(TX_state)]\n",
    "\n",
    "TX_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "3d9ba7e2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Made all of the columns into a list\n",
    "columns_list = ['January 2011',\n",
    "'February 2011','March 2011','April 2011','May 2011','June 2011','July 2011',\n",
    "'August 2011','September 2011','October 2011','November 2011','December 2011',\n",
    "'January 2012','February 2012','March 2012','April 2012','May 2012','June 2012',\n",
    "'July 2012','August 2012','September 2012','October 2012','November 2012','December 2012',\n",
    "'January 2013','February 2013','March 2013','April 2013','May 2013','June 2013','July 2013',\n",
    "'August 2013','September 2013','October 2013','November 2013','December 2013','January 2014',\n",
    "'February 2014','March 2014','April 2014','May 2014','June 2014','July 2014','August 2014',\n",
    "'September 2014','October 2014','November 2014','December 2014','January 2015','February 2015',\n",
    "'March 2015','April 2015','May 2015','June 2015','July 2015','August 2015','September 2015','October 2015',\n",
    "'November 2015','December 2015','January 2016','February 2016','March 2016','April 2016','May 2016',\n",
    "'June 2016','July 2016','August 2016','September 2016','October 2016','November 2016','December 2016']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "id": "f9f69c24",
   "metadata": {},
   "outputs": [],
   "source": [
    "# US median rent prices\n",
    "US_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    US_med_rent = np.median(clean_rent_df[i])\n",
    "\n",
    "    US_med_list.append(US_med_rent)\n",
    "\n",
    "print(US_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "id": "eb8929ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put US med rent prices for each month and year into a DF\n",
    "US_med_df = pd.DataFrame(US_med_list, columns_list).T \n",
    "\n",
    "US_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "5b9c1310",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in IL\n",
    "IL_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    IL_med_rent = np.median(IL_state_df[i])\n",
    "\n",
    "    IL_med_list.append(IL_med_rent)\n",
    "\n",
    "print(IL_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "469c26cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put IL med rent prices for each month and year into a DF\n",
    "IL_med_df = pd.DataFrame(IL_med_list, columns_list).T \n",
    "\n",
    "IL_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "436318b5",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in CA\n",
    "CA_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    CA_med_rent = np.median(CA_state_df[i])\n",
    "\n",
    "    CA_med_list.append(CA_med_rent)\n",
    "\n",
    "print(CA_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "81b6283b",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put CA med rent prices for each month and year into a DF\n",
    "CA_med_df = pd.DataFrame(CA_med_list, columns_list).T \n",
    "\n",
    "CA_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "id": "27d878fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in TX\n",
    "TX_med_list=[]\n",
    "for i in columns_list:\n",
    "\n",
    "    TX_med_rent = np.median(TX_state_df[i])\n",
    "\n",
    "    TX_med_list.append(TX_med_rent)\n",
    "\n",
    "print(TX_med_list)  \n",
    "\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "id": "404c412c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put TX med rent prices for each month and year into a DF\n",
    "TX_med_df = pd.DataFrame(TX_med_list, columns_list).T \n",
    "\n",
    "TX_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "0009eadb",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in NY\n",
    "NY_med_list=[]\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    NY_med_rent = np.median(NY_state_df[i])\n",
    "    NY_med_list.append(NY_med_rent)\n",
    "\n",
    "print(NY_med_list)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "77b65145",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Put NY med rent prices for each month and year into a DF\n",
    "NY_med_df = pd.DataFrame(NY_med_list, columns_list).T \n",
    "\n",
    "NY_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "9964785a",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Combined Median rent data for 4 states\n",
    "TX_CA_df = pd.concat([TX_med_df, CA_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "IL_NY_df = pd.concat([IL_med_df, NY_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "states_med_rent = pd.concat([TX_CA_df, IL_NY_df], axis=0, ignore_index=True)\n",
    "\n",
    "#0 = TX, 1 = CA, 2 = IL, 3 = NY\n",
    "states_med_rent.insert(0, \"States\", [\"TX\", \"CA\", \"IL\", \"NY\"])\n",
    "\n",
    "states_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "id": "b69f6ba8",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a table with US Med in it\n",
    "\n",
    "ALL_med_rent = pd.concat([states_med_rent, US_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "#ALL_med_rent.reset_index(drop=True)\n",
    "#ALL_med_rent.set_index('State', inplace=True, drop=True)\n",
    "#ALL_med_rent[ALL_med_rent.index[-1]] = \"US\"\n",
    "ALL_med_rent.insert(0, \"State\", [\"TX\", \"CA\", \"IL\", \"NY\", \"US\"])\n",
    "\n",
    "ALL_med_rent.drop([\"States\"], axis = 1, inplace=True)\n",
    "ALL_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "45a7c5b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for TX by year and make df\n",
    "TX_2011_rents = [1194.0, 1189.0, 1186.0, 1183.0, 1182.0, 1189.0, 1184.0, 1179.0, 1181.0, 1174.0, 1173.0, 1167.0]\n",
    "TX_2012_rents = [1164.0, 1162.0, 1165.0, 1159.0, 1155.0, 1158.0, 1168.0, 1172.0, 1177.0, 1179.0, 1173.0, 1171.0]\n",
    "TX_2013_rents = [1175.0, 1174.0, 1181.0, 1196.0, 1202.0, 1200.0, 1197.0, 1201.0, 1205.0, 1208.0, 1212.0, 1221.0]\n",
    "TX_2014_rents = [1224.0, 1224.0, 1222.0, 1225.0, 1221.0, 1218.0, 1221.0, 1234.0, 1245.0, 1256.0, 1272.0, 1275.0]\n",
    "TX_2015_rents = [1282.0, 1287.0, 1289.0, 1297.0, 1300.0, 1309.0, 1313.0, 1319.0, 1323.0, 1325.0, 1320.0, 1312.0]\n",
    "TX_2016_rents = [1313.0, 1319.0, 1326.0, 1325.0, 1338.0, 1346.0, 1350.0, 1343.0, 1340.0, 1335.0, 1335.0, 1337.0]\n",
    "\n",
    "\n",
    "TX_2011_med = np.median(TX_2011_rents)\n",
    "TX_2012_med = np.median(TX_2012_rents)\n",
    "TX_2013_med = np.median(TX_2013_rents)\n",
    "TX_2014_med = np.median(TX_2014_rents)\n",
    "TX_2015_med = np.median(TX_2015_rents)\n",
    "TX_2016_med = np.median(TX_2016_rents)\n",
    "\n",
    "TX_yearly_rent = {\"2011\":[TX_2011_med], \"2012\" :[TX_2012_med], \"2013\" :[TX_2013_med], \"2014\" :[TX_2014_med], \"2015\" :[TX_2015_med], \"2016\" :[TX_2016_med]}\n",
    "\n",
    "TX_yearly_rent_df = pd.DataFrame(TX_yearly_rent)\n",
    "\n",
    "TX_yearly_rent_df.insert(0, \"State\", [\"TX\"])\n",
    "\n",
    "TX_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "TX_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "d34dccbe",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for CA by year and make df\n",
    "CA_2011_rents = [1770.0, 1754.0, 1738.5, 1729.0, 1716.5, 1717.5, 1719.5, 1718.0, 1712.5, 1710.5, 1710.0, 1705.0]\n",
    "CA_2012_rents = [1702.5, 1695.5, 1696.5, 1697.0, 1700.5, 1713.5, 1710.5, 1709.0, 1702.0, 1704.5, 1700.0, 1701.0]\n",
    "CA_2013_rents = [1707.5, 1718.5, 1728.0, 1735.0, 1743.0, 1756.5, 1763.0, 1764.5, 1767.0, 1773.5, 1779.5, 1781.5]\n",
    "CA_2014_rents = [1782.5, 1781.0, 1785.5, 1784.5, 1787.0, 1790.0, 1794.0, 1807.5, 1824.0, 1842.5, 1859.5, 1875.0]\n",
    "CA_2015_rents = [1885.0, 1899.0, 1907.0, 1921.5, 1935.0, 1946.0, 1957.0, 1969.0, 1977.0, 1982.0, 1995.0, 2004.0]\n",
    "CA_2016_rents = [2014.5, 2036.5, 2056.0, 2062.5, 2072.0, 2092.0, 2104.0, 2115.0, 2124.5, 2128.5, 2134.0, 2150.5]\n",
    "\n",
    "CA_2011_med = np.median(CA_2011_rents)\n",
    "CA_2012_med = np.median(CA_2012_rents)\n",
    "CA_2013_med = np.median(CA_2013_rents)\n",
    "CA_2014_med = np.median(CA_2014_rents)\n",
    "CA_2015_med = np.median(CA_2015_rents)\n",
    "CA_2016_med = np.median(CA_2016_rents)\n",
    "\n",
    "CA_yearly_rent = {\"2011\":[CA_2011_med], \"2012\" :[CA_2012_med], \"2013\" :[CA_2013_med], \"2014\" :[CA_2014_med], \"2015\" :[CA_2015_med], \"2016\" :[CA_2016_med]}\n",
    "\n",
    "CA_yearly_rent_df = pd.DataFrame(CA_yearly_rent)\n",
    "\n",
    "CA_yearly_rent_df.insert(0, \"State\", [\"CA\"])\n",
    "\n",
    "CA_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "CA_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "18e80b2d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for IL by year and make df\n",
    "IL_2011_rents = [1425.0, 1426.0, 1422.5, 1421.5, 1413.5, 1406.5, 1392.5, 1382.0, 1380.0, 1370.0, 1363.5, 1355.5]\n",
    "IL_2012_rents = [1349.0, 1344.0, 1341.0, 1344.0, 1344.0, 1347.5, 1347.0, 1346.0, 1351.0, 1359.5, 1371.0, 1370.0]\n",
    "IL_2013_rents = [1364.5, 1351.5, 1345.5, 1347.0, 1354.0, 1360.0, 1363.0, 1364.5, 1372.5, 1379.0, 1385.5, 1392.0]\n",
    "IL_2014_rents = [1399.0, 1400.5, 1395.0, 1393.0, 1387.0, 1385.5, 1379.5, 1384.0, 1385.0, 1386.5, 1397.0, 1406.5]\n",
    "IL_2015_rents = [1411.5, 1408.0, 1416.5, 1414.5, 1413.0, 1413.0, 1414.5, 1414.0, 1411.0, 1403.0, 1398.5, 1396.0]\n",
    "IL_2016_rents = [1405.5, 1408.0, 1413.0, 1416.5, 1424.5, 1424.0, 1431.0, 1426.5, 1418.0, 1410.0, 1405.0, 1397.0]\n",
    "\n",
    "IL_2011_med = np.median(IL_2011_rents)\n",
    "IL_2012_med = np.median(IL_2012_rents)\n",
    "IL_2013_med = np.median(IL_2013_rents)\n",
    "IL_2014_med = np.median(IL_2014_rents)\n",
    "IL_2015_med = np.median(IL_2015_rents)\n",
    "IL_2016_med = np.median(IL_2016_rents)\n",
    "\n",
    "IL_yearly_rent = {\"2011\":[IL_2011_med], \"2012\" :[IL_2012_med], \"2013\" :[IL_2013_med], \"2014\" :[IL_2014_med], \"2015\" :[IL_2015_med], \"2016\" :[IL_2016_med]}\n",
    "\n",
    "IL_yearly_rent_df = pd.DataFrame(IL_yearly_rent)\n",
    "\n",
    "IL_yearly_rent_df.insert(0, \"State\", [\"IL\"])\n",
    "\n",
    "IL_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "IL_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "b51c53cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for NY by year and make df\n",
    "NY_2011_rents = [1369.5, 1383.5, 1380.5, 1388.0, 1390.5, 1401.0, 1401.0, 1399.0, 1397.0, 1399.0, 1400.5, 1399.0]\n",
    "NY_2012_rents = [1391.5, 1383.0, 1376.0, 1378.0, 1396.0, 1411.0, 1428.5, 1438.0, 1437.5, 1431.0, 1417.5, 1416.0]\n",
    "NY_2013_rents = [1419.5, 1432.0, 1434.0, 1431.5, 1434.0, 1418.5, 1384.5, 1368.5, 1366.5, 1379.0, 1398.5, 1395.0]\n",
    "NY_2014_rents = [1378.5, 1360.0, 1357.5, 1351.0, 1341.0, 1342.0, 1362.5, 1382.0, 1400.5, 1410.0, 1418.5, 1430.0]\n",
    "NY_2015_rents = [1440.5, 1443.0, 1449.0, 1448.5, 1444.5, 1437.5, 1428.5, 1403.0, 1388.5, 1376.0, 1371.5, 1363.0]\n",
    "NY_2016_rents = [1368.0, 1365.0, 1374.5, 1380.0, 1385.5, 1390.5, 1401.5, 1399.0, 1394.5, 1392.5, 1389.5, 1386.5]\n",
    "\n",
    "NY_2011_med = np.median(NY_2011_rents)\n",
    "NY_2012_med = np.median(NY_2012_rents)\n",
    "NY_2013_med = np.median(NY_2013_rents)\n",
    "NY_2014_med = np.median(NY_2014_rents)\n",
    "NY_2015_med = np.median(NY_2015_rents)\n",
    "NY_2016_med = np.median(NY_2016_rents)\n",
    "\n",
    "NY_yearly_rent = {\"2011\":[NY_2011_med], \"2012\" :[NY_2012_med], \"2013\" :[NY_2013_med], \"2014\" :[NY_2014_med], \"2015\" :[NY_2015_med], \"2016\" :[NY_2016_med]}\n",
    "\n",
    "NY_yearly_rent_df = pd.DataFrame(NY_yearly_rent)\n",
    "\n",
    "NY_yearly_rent_df.insert(0, \"State\", [\"NY\"])\n",
    "\n",
    "NY_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "NY_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "ed314e18",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for US by year and make df\n",
    "US_2011_rents = [1218.0, 1219.0, 1220.0, 1220.0, 1218.0, 1217.0, 1214.0, 1213.0, 1210.0, 1207.0, 1206.0, 1205.0]\n",
    "US_2012_rents = [1204.0, 1205.0, 1207.0, 1206.0, 1205.0, 1205.0, 1205.0, 1206.0, 1208.0, 1210.0, 1215.0, 1215.0]\n",
    "US_2013_rents = [1215.0, 1216.0, 1217.0, 1217.0, 1218.0, 1221.0, 1224.0, 1225.0, 1228.0, 1231.0, 1235.0, 1236.0]\n",
    "US_2014_rents = [1236.0, 1234.0, 1232.0, 1229.0, 1227.0, 1223.0, 1226.0, 1232.0, 1245.0, 1253.0, 1259.0, 1263.0]\n",
    "US_2015_rents = [1269.0, 1272.0, 1276.0, 1280.0, 1284.0, 1289.0, 1295.0, 1299.0, 1298.0, 1294.0, 1293.0, 1292.0]\n",
    "US_2016_rents = [1294.0, 1298.0, 1303.0, 1308.0, 1312.0, 1313.0, 1311.0, 1306.0, 1305.0, 1305.0, 1307.0, 1308.0]\n",
    "\n",
    "US_2011_med = np.median(US_2011_rents)\n",
    "US_2012_med = np.median(US_2012_rents)\n",
    "US_2013_med = np.median(US_2013_rents)\n",
    "US_2014_med = np.median(US_2014_rents)\n",
    "US_2015_med = np.median(US_2015_rents)\n",
    "US_2016_med = np.median(US_2016_rents)\n",
    "\n",
    "US_yearly_rent = {\"2011\":[US_2011_med], \"2012\" :[US_2012_med], \"2013\" :[US_2013_med], \"2014\" :[US_2014_med], \"2015\" :[US_2015_med], \"2016\" :[US_2016_med]}\n",
    "\n",
    "US_yearly_rent_df = pd.DataFrame(US_yearly_rent)\n",
    "\n",
    "US_yearly_rent_df.insert(0, \"State\", [\"US\"])\n",
    "\n",
    "US_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "US_yearly_rent_df.head(10)\n",
    "\n",
    "#ayear = [2011,2012,2013,2014,2015,2016]\n",
    "#rent_cost = [US_2011_med,US_2012_med,US_2013_med,US_2014_med,US_2015_med,US_2016_med]\n",
    "#correlation = st.pearsonr(rent_cost,year)\n",
    "#print(f\"The correlation between both factors is {round(correlation[0],2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "7e6a83cb",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Combined yearly rents in to one df\n",
    "TX_CA_yearly_rent_df = pd.concat([TX_yearly_rent_df, CA_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "TX_CA_yearly_rent_df\n",
    "\n",
    "IL_NY_yearly_rent_df = pd.concat([IL_yearly_rent_df, NY_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "IL_NY_yearly_rent_df\n",
    "\n",
    "states_yearly_rent_df = pd.concat([TX_CA_yearly_rent_df, IL_NY_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "states_yearly_rent_df\n",
    "\n",
    "ALL_yearly_rent_df = pd.concat([states_yearly_rent_df, US_yearly_rent_df], axis=0, ignore_index = True)\n",
    "#0 = TX, 1 = CA, 2 = IL, 3 = NY\n",
    "\n",
    "ALL_yearly_rent_df.insert(0, \"State\", ['TX', 'CA', 'IL', 'NY', 'US'])\n",
    "\n",
    "ALL_yearly_rent_df.set_index(['State'], drop=True, append=False, inplace=True, verify_integrity=False)\n",
    "#ALL_yearly_rent_df.reset_index()\n",
    "\n",
    "ALL_yearly_rent_df['Rent Change (%)'] = ((ALL_yearly_rent_df[['2011', '2016']].pct_change(axis=1)['2016'])* 100).round(2)\n",
    "\n",
    "ALL_yearly_rent_df.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "45feea91",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.show()\n",
    "#plt.savefig('Visulaizations Outputs\\US_Rent_graph.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "f2f39e45",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph showing all 4 states median rent prices throughout timeframe 2011-2016\n",
    "\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"]\n",
    "\n",
    "TX_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"TX\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"Texas\", color=\"blue\") \n",
    "\n",
    "CA_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"CA\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"California\", color=\"orange\") \n",
    "\n",
    "IL_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"IL\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"Illinois\", color=\"green\") \n",
    "\n",
    "NY_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"NY\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"New York\", color=\"red\") \n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "legend_list = [\"TX\", \"CA\", \"IL\", \"NY\", \"US\"]\n",
    "plt.legend([\"TX\", \"CA\", \"IL\", \"NY\", \"US\"], loc=\"best\")\n",
    "\n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "plt.title(\"US, TX, CA, IL, NY Median Rent Prices 2011-2016\")\n",
    "plt.savefig('Visualizations Outputs\\All_Rent_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "dd93d836",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Bar graph showing the change in rent (%)\n",
    "rent_change_bar = ALL_yearly_rent_df['Rent Change (%)'].plot(kind=\"bar\", color=[\"blue\", \"orange\", \"green\", \"red\", \"purple\"], figsize=(8,6),\n",
    "                                   title=\"Rent Change by State (%)\",\n",
    "                                   xlabel=\"State\",\n",
    "                                   ylabel=\"Percent of Change\")\n",
    "rent_change_bar.axhline(y=0, color= 'black', linewidth=1,)\n",
    "\n",
    "plt.savefig('Visualizations Outputs\\Change_Rent_graph.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "ab157638",
   "metadata": {},
   "outputs": [],
   "source": [
    "year = [2011,2011, 2011, 2011, 2012, 2012, 2012, 2012, 2013, 2013, 2013, 2013, 2014, 2014, 2014, 2014, 2015, 2015, 2015, 2015, 2016, 2016, 2016, 2016]\n",
    "rent_cost = [1182.50,1717.75,1399.50,1398.00, 1166.50,1701.50,1347.25,1413.50,1200.50,1759.75,1363.75,1408.50,1224.5,1792.0,1390.0,1370.5,1310.50,1951.50,1412.25,1433.00,1336.00,2098.00,1414.75,1388.00]\n",
    "correlation = st.pearsonr(rent_cost,year)\n",
    "print(f\"The correlation between both factors is {round(correlation[0],2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "5205ecf5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Box plot for data\n",
    "\n",
    "rents_data = pd.DataFrame({\"TX\": [1182.50,1166.50,1200.50,1224.5,1310.50,1336.00], \"CA\": [1717.75,1701.50,1759.75,1792.0,1951.50,2098.00], \n",
    "\"IL\": [1399.50,1347.25,1363.75,1390.0,1412.25,1414.75], \"NY\": [1398.00,1413.50,1408.50,1370.5,1433.00,1388.00], \"US\": [1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]})\n",
    "\n",
    "# Plot the dataframe\n",
    "ax = rents_data[['TX', 'CA', 'IL', 'NY', 'US']].plot(kind='box', title='Boxplot')\n",
    "\n",
    "# Display the plot\n",
    "plt.savefig('Visualizations Outputs\\Boxplot_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "id": "fa6f37a4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Using Chi Square Test for change in rent\n",
    "CA_obs = pd.Series([1717.75,1701.50,1759.75,1792.0,1951.50,2098.00], index=[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"])\n",
    "#[1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]\n",
    "\n",
    "CA_Chi_SQ_df = pd.DataFrame(CA_obs)\n",
    "\n",
    "CA_Chi_SQ_df[1] = [1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]\n",
    "\n",
    "CA_Chi_SQ_df.columns = [\"CA Observed\", \"Expected\"]\n",
    "\n",
    "CA_Chi_SQ_df.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "e5e5db31",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "CA_Chi_SQ_df_scaled = scaler.fit_transform(CA_Chi_SQ_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "0da62194",
   "metadata": {},
   "outputs": [],
   "source": [
    "CA_Chi_SQ_df_scaled[:,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "a813706a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quartiles and outliers\n",
    "quartiles_columns = ALL_yearly_rent_df_t.columns\n",
    "\n",
    "for column in quartiles_columns:\n",
    "    quartiles = np.percentile(ALL_yearly_rent_df_t[column], [25, 50, 75])\n",
    "    lower_q = np.percentile(ALL_yearly_rent_df_t, 25)\n",
    "    upper_q = np.percentile(ALL_yearly_rent_df_t, 75)\n",
    "\n",
    "    IQR = upper_q - lower_q\n",
    "\n",
    "    lower_bound = lower_q - 1.5 * IQR\n",
    "    upper_bound = upper_q + 1.5 * IQR\n",
    "\n",
    "    outliers = ALL_yearly_rent_df_t.loc[(ALL_yearly_rent_df_t[column] < lower_bound) | (ALL_yearly_rent_df_t[column] > upper_bound)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "6b4dc1f5",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Summary Statistics\n",
    "summary_stats = ALL_yearly_rent_df_t.describe()\n",
    "summary_stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "c2645f31",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show IL median rent data over time\n",
    "illinoisdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":IL_med_list\n",
    "}\n",
    "\n",
    "illinoisdf=pd.DataFrame(illinoisdata)\n",
    "\n",
    "illinoisdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"Illinois Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\IL_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "2d7e8efb",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show CA median rent data overtime\n",
    "californiadata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":CA_med_list\n",
    "}\n",
    "\n",
    "californiadf=pd.DataFrame(californiadata)\n",
    "\n",
    "californiadf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"California Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\CA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "43061d6e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show Texas median rent data overtime\n",
    "texasdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":TX_med_list\n",
    "}\n",
    "\n",
    "texasdf=pd.DataFrame(texasdata)\n",
    "\n",
    "texasdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"Texas Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\TX_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "ad8b7847",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "#Used https://stackoverflow.com/questions/1347791/unicode-error-unicodeescape-codec-cant-decode-bytes-cannot-open-text-file\n",
    "#To help with unicode error when trying to save plot\n",
    "\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "802b507d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.savefig('Visulaizations Outputs\\US_Rent_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "e7298c86",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.savefig('Visulaizations Outputs\\\\US_Rent_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "5eae0f9d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.savefig('Visualizations Outputs\\\\US_Rent_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "b5aec54f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Histogram\n",
    "labels = []\n",
    "for state in ALL_yearly_rent_df_t.columns:\n",
    "    plt.hist(ALL_yearly_rent_df_t[state]) \n",
    "    labels.append(state)\n",
    "\n",
    "    plt.xlabel('Rent Values')\n",
    "    plt.ylabel('Frequency')\n",
    "    # plt.title('Histogram of Rent')\n",
    "    \n",
    "plt.legend(labels)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "db248ef9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Histogram\n",
    "labels = []\n",
    "for state in ALL_yearly_rent_df_t.columns:\n",
    "    plt.hist(ALL_yearly_rent_df_t[state]) \n",
    "    labels.append(state)\n",
    "\n",
    "    plt.xlabel('Rent Values')\n",
    "    plt.ylabel('Frequency')\n",
    "    # plt.title('Histogram of Rent')\n",
    "    \n",
    "plt.legend(labels)\n",
    "plt.savefig('Visualizations Outputs\\Histogram.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "1c3e8c45",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for TX by year and make df\n",
    "TX_2011_rents = [1194.0, 1189.0, 1186.0, 1183.0, 1182.0, 1189.0, 1184.0, 1179.0, 1181.0, 1174.0, 1173.0, 1167.0]\n",
    "TX_2012_rents = [1164.0, 1162.0, 1165.0, 1159.0, 1155.0, 1158.0, 1168.0, 1172.0, 1177.0, 1179.0, 1173.0, 1171.0]\n",
    "TX_2013_rents = [1175.0, 1174.0, 1181.0, 1196.0, 1202.0, 1200.0, 1197.0, 1201.0, 1205.0, 1208.0, 1212.0, 1221.0]\n",
    "TX_2014_rents = [1224.0, 1224.0, 1222.0, 1225.0, 1221.0, 1218.0, 1221.0, 1234.0, 1245.0, 1256.0, 1272.0, 1275.0]\n",
    "TX_2015_rents = [1282.0, 1287.0, 1289.0, 1297.0, 1300.0, 1309.0, 1313.0, 1319.0, 1323.0, 1325.0, 1320.0, 1312.0]\n",
    "TX_2016_rents = [1313.0, 1319.0, 1326.0, 1325.0, 1338.0, 1346.0, 1350.0, 1343.0, 1340.0, 1335.0, 1335.0, 1337.0]\n",
    "\n",
    "\n",
    "TX_2011_med = np.median(TX_2011_rents)\n",
    "TX_2012_med = np.median(TX_2012_rents)\n",
    "TX_2013_med = np.median(TX_2013_rents)\n",
    "TX_2014_med = np.median(TX_2014_rents)\n",
    "TX_2015_med = np.median(TX_2015_rents)\n",
    "TX_2016_med = np.median(TX_2016_rents)\n",
    "\n",
    "TX_yearly_rent = {\"2011\":[TX_2011_med], \"2012\" :[TX_2012_med], \"2013\" :[TX_2013_med], \"2014\" :[TX_2014_med], \"2015\" :[TX_2015_med], \"2016\" :[TX_2016_med]}\n",
    "\n",
    "TX_yearly_rent_df = pd.DataFrame(TX_yearly_rent)\n",
    "\n",
    "TX_yearly_rent_df.insert(0, \"State\", [\"TX\"])\n",
    "\n",
    "TX_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "TX_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "9314a86b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for TX by year and make df\n",
    "# TX_2011_rents = [1194.0, 1189.0, 1186.0, 1183.0, 1182.0, 1189.0, 1184.0, 1179.0, 1181.0, 1174.0, 1173.0, 1167.0]\n",
    "# TX_2012_rents = [1164.0, 1162.0, 1165.0, 1159.0, 1155.0, 1158.0, 1168.0, 1172.0, 1177.0, 1179.0, 1173.0, 1171.0]\n",
    "# TX_2013_rents = [1175.0, 1174.0, 1181.0, 1196.0, 1202.0, 1200.0, 1197.0, 1201.0, 1205.0, 1208.0, 1212.0, 1221.0]\n",
    "# TX_2014_rents = [1224.0, 1224.0, 1222.0, 1225.0, 1221.0, 1218.0, 1221.0, 1234.0, 1245.0, 1256.0, 1272.0, 1275.0]\n",
    "# TX_2015_rents = [1282.0, 1287.0, 1289.0, 1297.0, 1300.0, 1309.0, 1313.0, 1319.0, 1323.0, 1325.0, 1320.0, 1312.0]\n",
    "# TX_2016_rents = [1313.0, 1319.0, 1326.0, 1325.0, 1338.0, 1346.0, 1350.0, 1343.0, 1340.0, 1335.0, 1335.0, 1337.0]\n",
    "\n",
    "\n",
    "# TX_2011_med = np.median(TX_2011_rents)\n",
    "# TX_2012_med = np.median(TX_2012_rents)\n",
    "# TX_2013_med = np.median(TX_2013_rents)\n",
    "# TX_2014_med = np.median(TX_2014_rents)\n",
    "# TX_2015_med = np.median(TX_2015_rents)\n",
    "# TX_2016_med = np.median(TX_2016_rents)\n",
    "\n",
    "# TX_yearly_rent = {\"2011\":[TX_2011_med], \"2012\" :[TX_2012_med], \"2013\" :[TX_2013_med], \"2014\" :[TX_2014_med], \"2015\" :[TX_2015_med], \"2016\" :[TX_2016_med]}\n",
    "\n",
    "# TX_yearly_rent_df = pd.DataFrame(TX_yearly_rent)\n",
    "\n",
    "# TX_yearly_rent_df.insert(0, \"State\", [\"TX\"])\n",
    "\n",
    "# TX_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "# TX_yearly_rent_df.head(10)\n",
    "\n",
    "TX_2011_rents = [1194.0, 1189.0, 1186.0, 1183.0, 1182.0, 1189.0, 1184.0, 1179.0, 1181.0, 1174.0, 1173.0, 1167.0]\n",
    "TX_2012_rents = [1164.0, 1162.0, 1165.0, 1159.0, 1155.0, 1158.0, 1168.0, 1172.0, 1177.0, 1179.0, 1173.0, 1171.0]\n",
    "TX_2013_rents = [1175.0, 1174.0, 1181.0, 1196.0, 1202.0, 1200.0, 1197.0, 1201.0, 1205.0, 1208.0, 1212.0, 1221.0]\n",
    "TX_2014_rents = [1224.0, 1224.0, 1222.0, 1225.0, 1221.0, 1218.0, 1221.0, 1234.0, 1245.0, 1256.0, 1272.0, 1275.0]\n",
    "TX_2015_rents = [1282.0, 1287.0, 1289.0, 1297.0, 1300.0, 1309.0, 1313.0, 1319.0, 1323.0, 1325.0, 1320.0, 1312.0]\n",
    "TX_2016_rents = [1313.0, 1319.0, 1326.0, 1325.0, 1338.0, 1346.0, 1350.0, 1343.0, 1340.0, 1335.0, 1335.0, 1337.0]\n",
    "\n",
    "\n",
    "TX_2011_med = np.median(TX_2011_rents)\n",
    "TX_2012_med = np.median(TX_2012_rents)\n",
    "TX_2013_med = np.median(TX_2013_rents)\n",
    "TX_2014_med = np.median(TX_2014_rents)\n",
    "TX_2015_med = np.median(TX_2015_rents)\n",
    "TX_2016_med = np.median(TX_2016_rents)\n",
    "\n",
    "TX_yearly_rent = {\"2011\":[TX_2011_med], \"2012\" :[TX_2012_med], \"2013\" :[TX_2013_med], \"2014\" :[TX_2014_med], \"2015\" :[TX_2015_med], \"2016\" :[TX_2016_med]}\n",
    "\n",
    "TX_yearly_rent_df = pd.DataFrame(TX_yearly_rent)\n",
    "\n",
    "TX_yearly_rent_df.insert(0, \"State\", [\"TX\"])\n",
    "\n",
    "TX_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "TX_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "29ddbcee",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dependencies and Set Up\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as st\n",
    "from scipy.stats import linregress\n",
    "import seaborn as sns  # For heatmap visualization\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "id": "9f1c9e3f",
   "metadata": {},
   "outputs": [],
   "source": [
    "%notebook widget"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "1e0df2e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a path to the file making it into a dataframe\n",
    "rent_file = pd.read_csv(\"Raw_Price_Data//price.csv\")\n",
    "\n",
    "rent_df = pd.DataFrame(rent_file)\n",
    "\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "id": "fb79eaa3",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Identified what columns are missing data\n",
    "clean_rent_df = rent_df.dropna(how = 'any')\n",
    "\n",
    "clean_rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "7fe66f68",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Extracted states from data (CA, IL, NY, TX)\n",
    "four_states = [\"NY\", \"CA\", \"IL\", \"TX\"]\n",
    "\n",
    "four_states_df = rent_df[rent_df['State'].isin(four_states)]\n",
    "\n",
    "four_states_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "id": "525daa33",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dropped all NaN values\n",
    "rent_df.dropna(inplace = True)\n",
    "\n",
    "#Display the DataFrame\n",
    "rent_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "48c4094e",
   "metadata": {},
   "outputs": [],
   "source": [
    "#New York Data Frame\n",
    "NY_state = [\"NY\"]\n",
    "\n",
    "NY_state_df = rent_df[rent_df['State'].isin(NY_state)]\n",
    "\n",
    "NY_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "01cfb294",
   "metadata": {},
   "outputs": [],
   "source": [
    "#California Data Frame\n",
    "CA_state = [\"CA\"]\n",
    "\n",
    "CA_state_df = rent_df[rent_df['State'].isin(CA_state)]\n",
    "\n",
    "CA_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "b22370ba",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Illinois Data Frame\n",
    "IL_state = [\"IL\"]\n",
    "\n",
    "IL_state_df = rent_df[rent_df['State'].isin(IL_state)]\n",
    "\n",
    "IL_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "id": "9c9d2bbc",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Texas Data Frame\n",
    "TX_state = [\"TX\"]\n",
    "\n",
    "TX_state_df = rent_df[rent_df['State'].isin(TX_state)]\n",
    "\n",
    "TX_state_df.head(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "d397cbc1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Made all of the columns into a list\n",
    "columns_list = ['January 2011',\n",
    "'February 2011','March 2011','April 2011','May 2011','June 2011','July 2011',\n",
    "'August 2011','September 2011','October 2011','November 2011','December 2011',\n",
    "'January 2012','February 2012','March 2012','April 2012','May 2012','June 2012',\n",
    "'July 2012','August 2012','September 2012','October 2012','November 2012','December 2012',\n",
    "'January 2013','February 2013','March 2013','April 2013','May 2013','June 2013','July 2013',\n",
    "'August 2013','September 2013','October 2013','November 2013','December 2013','January 2014',\n",
    "'February 2014','March 2014','April 2014','May 2014','June 2014','July 2014','August 2014',\n",
    "'September 2014','October 2014','November 2014','December 2014','January 2015','February 2015',\n",
    "'March 2015','April 2015','May 2015','June 2015','July 2015','August 2015','September 2015','October 2015',\n",
    "'November 2015','December 2015','January 2016','February 2016','March 2016','April 2016','May 2016',\n",
    "'June 2016','July 2016','August 2016','September 2016','October 2016','November 2016','December 2016']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "id": "93372bec",
   "metadata": {},
   "outputs": [],
   "source": [
    "# US median rent prices\n",
    "US_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    US_med_rent = np.median(clean_rent_df[i])\n",
    "\n",
    "    US_med_list.append(US_med_rent)\n",
    "\n",
    "print(US_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "id": "7a018b34",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put US med rent prices for each month and year into a DF\n",
    "US_med_df = pd.DataFrame(US_med_list, columns_list).T \n",
    "\n",
    "US_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "8c83e063",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in IL\n",
    "IL_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    IL_med_rent = np.median(IL_state_df[i])\n",
    "\n",
    "    IL_med_list.append(IL_med_rent)\n",
    "\n",
    "print(IL_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "186f6d84",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put IL med rent prices for each month and year into a DF\n",
    "IL_med_df = pd.DataFrame(IL_med_list, columns_list).T \n",
    "\n",
    "IL_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "id": "7247903d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in CA\n",
    "CA_med_list = []\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    CA_med_rent = np.median(CA_state_df[i])\n",
    "\n",
    "    CA_med_list.append(CA_med_rent)\n",
    "\n",
    "print(CA_med_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "id": "c953765d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put CA med rent prices for each month and year into a DF\n",
    "CA_med_df = pd.DataFrame(CA_med_list, columns_list).T \n",
    "\n",
    "CA_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "2e10684a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in TX\n",
    "TX_med_list=[]\n",
    "for i in columns_list:\n",
    "\n",
    "    TX_med_rent = np.median(TX_state_df[i])\n",
    "\n",
    "    TX_med_list.append(TX_med_rent)\n",
    "\n",
    "print(TX_med_list)  \n",
    "\n",
    "   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "id": "b03d4d78",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Put TX med rent prices for each month and year into a DF\n",
    "TX_med_df = pd.DataFrame(TX_med_list, columns_list).T \n",
    "\n",
    "TX_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "965169ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "# For loop to calculate the median value of each column in NY\n",
    "NY_med_list=[]\n",
    "\n",
    "for i in columns_list:\n",
    "\n",
    "    NY_med_rent = np.median(NY_state_df[i])\n",
    "    NY_med_list.append(NY_med_rent)\n",
    "\n",
    "print(NY_med_list)  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "4d1fd7c6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Put NY med rent prices for each month and year into a DF\n",
    "NY_med_df = pd.DataFrame(NY_med_list, columns_list).T \n",
    "\n",
    "NY_med_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "50f8b08f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Combined Median rent data for 4 states\n",
    "TX_CA_df = pd.concat([TX_med_df, CA_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "IL_NY_df = pd.concat([IL_med_df, NY_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "states_med_rent = pd.concat([TX_CA_df, IL_NY_df], axis=0, ignore_index=True)\n",
    "\n",
    "#0 = TX, 1 = CA, 2 = IL, 3 = NY\n",
    "states_med_rent.insert(0, \"States\", [\"TX\", \"CA\", \"IL\", \"NY\"])\n",
    "\n",
    "states_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "ca89a3f6",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Created a table with US Med in it\n",
    "\n",
    "ALL_med_rent = pd.concat([states_med_rent, US_med_df], axis=0, ignore_index=True)\n",
    "\n",
    "#ALL_med_rent.reset_index(drop=True)\n",
    "#ALL_med_rent.set_index('State', inplace=True, drop=True)\n",
    "#ALL_med_rent[ALL_med_rent.index[-1]] = \"US\"\n",
    "ALL_med_rent.insert(0, \"State\", [\"TX\", \"CA\", \"IL\", \"NY\", \"US\"])\n",
    "\n",
    "ALL_med_rent.drop([\"States\"], axis = 1, inplace=True)\n",
    "ALL_med_rent.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 174,
   "id": "c8236769",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for TX by year and make df\n",
    "TX_2011_rents = [1194.0, 1189.0, 1186.0, 1183.0, 1182.0, 1189.0, 1184.0, 1179.0, 1181.0, 1174.0, 1173.0, 1167.0]\n",
    "TX_2012_rents = [1164.0, 1162.0, 1165.0, 1159.0, 1155.0, 1158.0, 1168.0, 1172.0, 1177.0, 1179.0, 1173.0, 1171.0]\n",
    "TX_2013_rents = [1175.0, 1174.0, 1181.0, 1196.0, 1202.0, 1200.0, 1197.0, 1201.0, 1205.0, 1208.0, 1212.0, 1221.0]\n",
    "TX_2014_rents = [1224.0, 1224.0, 1222.0, 1225.0, 1221.0, 1218.0, 1221.0, 1234.0, 1245.0, 1256.0, 1272.0, 1275.0]\n",
    "TX_2015_rents = [1282.0, 1287.0, 1289.0, 1297.0, 1300.0, 1309.0, 1313.0, 1319.0, 1323.0, 1325.0, 1320.0, 1312.0]\n",
    "TX_2016_rents = [1313.0, 1319.0, 1326.0, 1325.0, 1338.0, 1346.0, 1350.0, 1343.0, 1340.0, 1335.0, 1335.0, 1337.0]\n",
    "\n",
    "\n",
    "TX_2011_med = np.median(TX_2011_rents)\n",
    "TX_2012_med = np.median(TX_2012_rents)\n",
    "TX_2013_med = np.median(TX_2013_rents)\n",
    "TX_2014_med = np.median(TX_2014_rents)\n",
    "TX_2015_med = np.median(TX_2015_rents)\n",
    "TX_2016_med = np.median(TX_2016_rents)\n",
    "\n",
    "TX_yearly_rent = {\"2011\":[TX_2011_med], \"2012\" :[TX_2012_med], \"2013\" :[TX_2013_med], \"2014\" :[TX_2014_med], \"2015\" :[TX_2015_med], \"2016\" :[TX_2016_med]}\n",
    "\n",
    "TX_yearly_rent_df = pd.DataFrame(TX_yearly_rent)\n",
    "\n",
    "TX_yearly_rent_df.insert(0, \"State\", [\"TX\"])\n",
    "\n",
    "TX_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "TX_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "6575beb0",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for CA by year and make df\n",
    "CA_2011_rents = [1770.0, 1754.0, 1738.5, 1729.0, 1716.5, 1717.5, 1719.5, 1718.0, 1712.5, 1710.5, 1710.0, 1705.0]\n",
    "CA_2012_rents = [1702.5, 1695.5, 1696.5, 1697.0, 1700.5, 1713.5, 1710.5, 1709.0, 1702.0, 1704.5, 1700.0, 1701.0]\n",
    "CA_2013_rents = [1707.5, 1718.5, 1728.0, 1735.0, 1743.0, 1756.5, 1763.0, 1764.5, 1767.0, 1773.5, 1779.5, 1781.5]\n",
    "CA_2014_rents = [1782.5, 1781.0, 1785.5, 1784.5, 1787.0, 1790.0, 1794.0, 1807.5, 1824.0, 1842.5, 1859.5, 1875.0]\n",
    "CA_2015_rents = [1885.0, 1899.0, 1907.0, 1921.5, 1935.0, 1946.0, 1957.0, 1969.0, 1977.0, 1982.0, 1995.0, 2004.0]\n",
    "CA_2016_rents = [2014.5, 2036.5, 2056.0, 2062.5, 2072.0, 2092.0, 2104.0, 2115.0, 2124.5, 2128.5, 2134.0, 2150.5]\n",
    "\n",
    "CA_2011_med = np.median(CA_2011_rents)\n",
    "CA_2012_med = np.median(CA_2012_rents)\n",
    "CA_2013_med = np.median(CA_2013_rents)\n",
    "CA_2014_med = np.median(CA_2014_rents)\n",
    "CA_2015_med = np.median(CA_2015_rents)\n",
    "CA_2016_med = np.median(CA_2016_rents)\n",
    "\n",
    "CA_yearly_rent = {\"2011\":[CA_2011_med], \"2012\" :[CA_2012_med], \"2013\" :[CA_2013_med], \"2014\" :[CA_2014_med], \"2015\" :[CA_2015_med], \"2016\" :[CA_2016_med]}\n",
    "\n",
    "CA_yearly_rent_df = pd.DataFrame(CA_yearly_rent)\n",
    "\n",
    "CA_yearly_rent_df.insert(0, \"State\", [\"CA\"])\n",
    "\n",
    "CA_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "CA_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 176,
   "id": "0e8472fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for IL by year and make df\n",
    "IL_2011_rents = [1425.0, 1426.0, 1422.5, 1421.5, 1413.5, 1406.5, 1392.5, 1382.0, 1380.0, 1370.0, 1363.5, 1355.5]\n",
    "IL_2012_rents = [1349.0, 1344.0, 1341.0, 1344.0, 1344.0, 1347.5, 1347.0, 1346.0, 1351.0, 1359.5, 1371.0, 1370.0]\n",
    "IL_2013_rents = [1364.5, 1351.5, 1345.5, 1347.0, 1354.0, 1360.0, 1363.0, 1364.5, 1372.5, 1379.0, 1385.5, 1392.0]\n",
    "IL_2014_rents = [1399.0, 1400.5, 1395.0, 1393.0, 1387.0, 1385.5, 1379.5, 1384.0, 1385.0, 1386.5, 1397.0, 1406.5]\n",
    "IL_2015_rents = [1411.5, 1408.0, 1416.5, 1414.5, 1413.0, 1413.0, 1414.5, 1414.0, 1411.0, 1403.0, 1398.5, 1396.0]\n",
    "IL_2016_rents = [1405.5, 1408.0, 1413.0, 1416.5, 1424.5, 1424.0, 1431.0, 1426.5, 1418.0, 1410.0, 1405.0, 1397.0]\n",
    "\n",
    "IL_2011_med = np.median(IL_2011_rents)\n",
    "IL_2012_med = np.median(IL_2012_rents)\n",
    "IL_2013_med = np.median(IL_2013_rents)\n",
    "IL_2014_med = np.median(IL_2014_rents)\n",
    "IL_2015_med = np.median(IL_2015_rents)\n",
    "IL_2016_med = np.median(IL_2016_rents)\n",
    "\n",
    "IL_yearly_rent = {\"2011\":[IL_2011_med], \"2012\" :[IL_2012_med], \"2013\" :[IL_2013_med], \"2014\" :[IL_2014_med], \"2015\" :[IL_2015_med], \"2016\" :[IL_2016_med]}\n",
    "\n",
    "IL_yearly_rent_df = pd.DataFrame(IL_yearly_rent)\n",
    "\n",
    "IL_yearly_rent_df.insert(0, \"State\", [\"IL\"])\n",
    "\n",
    "IL_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "IL_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "id": "71516e76",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for NY by year and make df\n",
    "NY_2011_rents = [1369.5, 1383.5, 1380.5, 1388.0, 1390.5, 1401.0, 1401.0, 1399.0, 1397.0, 1399.0, 1400.5, 1399.0]\n",
    "NY_2012_rents = [1391.5, 1383.0, 1376.0, 1378.0, 1396.0, 1411.0, 1428.5, 1438.0, 1437.5, 1431.0, 1417.5, 1416.0]\n",
    "NY_2013_rents = [1419.5, 1432.0, 1434.0, 1431.5, 1434.0, 1418.5, 1384.5, 1368.5, 1366.5, 1379.0, 1398.5, 1395.0]\n",
    "NY_2014_rents = [1378.5, 1360.0, 1357.5, 1351.0, 1341.0, 1342.0, 1362.5, 1382.0, 1400.5, 1410.0, 1418.5, 1430.0]\n",
    "NY_2015_rents = [1440.5, 1443.0, 1449.0, 1448.5, 1444.5, 1437.5, 1428.5, 1403.0, 1388.5, 1376.0, 1371.5, 1363.0]\n",
    "NY_2016_rents = [1368.0, 1365.0, 1374.5, 1380.0, 1385.5, 1390.5, 1401.5, 1399.0, 1394.5, 1392.5, 1389.5, 1386.5]\n",
    "\n",
    "NY_2011_med = np.median(NY_2011_rents)\n",
    "NY_2012_med = np.median(NY_2012_rents)\n",
    "NY_2013_med = np.median(NY_2013_rents)\n",
    "NY_2014_med = np.median(NY_2014_rents)\n",
    "NY_2015_med = np.median(NY_2015_rents)\n",
    "NY_2016_med = np.median(NY_2016_rents)\n",
    "\n",
    "NY_yearly_rent = {\"2011\":[NY_2011_med], \"2012\" :[NY_2012_med], \"2013\" :[NY_2013_med], \"2014\" :[NY_2014_med], \"2015\" :[NY_2015_med], \"2016\" :[NY_2016_med]}\n",
    "\n",
    "NY_yearly_rent_df = pd.DataFrame(NY_yearly_rent)\n",
    "\n",
    "NY_yearly_rent_df.insert(0, \"State\", [\"NY\"])\n",
    "\n",
    "NY_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "NY_yearly_rent_df.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "id": "6c43cd21",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Got median rent for US by year and make df\n",
    "US_2011_rents = [1218.0, 1219.0, 1220.0, 1220.0, 1218.0, 1217.0, 1214.0, 1213.0, 1210.0, 1207.0, 1206.0, 1205.0]\n",
    "US_2012_rents = [1204.0, 1205.0, 1207.0, 1206.0, 1205.0, 1205.0, 1205.0, 1206.0, 1208.0, 1210.0, 1215.0, 1215.0]\n",
    "US_2013_rents = [1215.0, 1216.0, 1217.0, 1217.0, 1218.0, 1221.0, 1224.0, 1225.0, 1228.0, 1231.0, 1235.0, 1236.0]\n",
    "US_2014_rents = [1236.0, 1234.0, 1232.0, 1229.0, 1227.0, 1223.0, 1226.0, 1232.0, 1245.0, 1253.0, 1259.0, 1263.0]\n",
    "US_2015_rents = [1269.0, 1272.0, 1276.0, 1280.0, 1284.0, 1289.0, 1295.0, 1299.0, 1298.0, 1294.0, 1293.0, 1292.0]\n",
    "US_2016_rents = [1294.0, 1298.0, 1303.0, 1308.0, 1312.0, 1313.0, 1311.0, 1306.0, 1305.0, 1305.0, 1307.0, 1308.0]\n",
    "\n",
    "US_2011_med = np.median(US_2011_rents)\n",
    "US_2012_med = np.median(US_2012_rents)\n",
    "US_2013_med = np.median(US_2013_rents)\n",
    "US_2014_med = np.median(US_2014_rents)\n",
    "US_2015_med = np.median(US_2015_rents)\n",
    "US_2016_med = np.median(US_2016_rents)\n",
    "\n",
    "US_yearly_rent = {\"2011\":[US_2011_med], \"2012\" :[US_2012_med], \"2013\" :[US_2013_med], \"2014\" :[US_2014_med], \"2015\" :[US_2015_med], \"2016\" :[US_2016_med]}\n",
    "\n",
    "US_yearly_rent_df = pd.DataFrame(US_yearly_rent)\n",
    "\n",
    "US_yearly_rent_df.insert(0, \"State\", [\"US\"])\n",
    "\n",
    "US_yearly_rent_df.set_index('State', inplace=True, drop=True)\n",
    "\n",
    "US_yearly_rent_df.head(10)\n",
    "\n",
    "#ayear = [2011,2012,2013,2014,2015,2016]\n",
    "#rent_cost = [US_2011_med,US_2012_med,US_2013_med,US_2014_med,US_2015_med,US_2016_med]\n",
    "#correlation = st.pearsonr(rent_cost,year)\n",
    "#print(f\"The correlation between both factors is {round(correlation[0],2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 179,
   "id": "c891469f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Combined yearly rents in to one df\n",
    "TX_CA_yearly_rent_df = pd.concat([TX_yearly_rent_df, CA_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "TX_CA_yearly_rent_df\n",
    "\n",
    "IL_NY_yearly_rent_df = pd.concat([IL_yearly_rent_df, NY_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "IL_NY_yearly_rent_df\n",
    "\n",
    "states_yearly_rent_df = pd.concat([TX_CA_yearly_rent_df, IL_NY_yearly_rent_df], axis=0, ignore_index = True)\n",
    "\n",
    "states_yearly_rent_df\n",
    "\n",
    "ALL_yearly_rent_df = pd.concat([states_yearly_rent_df, US_yearly_rent_df], axis=0, ignore_index = True)\n",
    "#0 = TX, 1 = CA, 2 = IL, 3 = NY\n",
    "\n",
    "ALL_yearly_rent_df.insert(0, \"State\", ['TX', 'CA', 'IL', 'NY', 'US'])\n",
    "\n",
    "ALL_yearly_rent_df.set_index(['State'], drop=True, append=False, inplace=True, verify_integrity=False)\n",
    "#ALL_yearly_rent_df.reset_index()\n",
    "\n",
    "ALL_yearly_rent_df['Rent Change (%)'] = ((ALL_yearly_rent_df[['2011', '2016']].pct_change(axis=1)['2016'])* 100).round(2)\n",
    "\n",
    "ALL_yearly_rent_df.head(30)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "092171d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph of median US Rent change from 2011-2016\n",
    "#Used https://stackoverflow.com/questions/1347791/unicode-error-unicodeescape-codec-cant-decode-bytes-cannot-open-text-file\n",
    "#To help with unicode error when trying to save plot\n",
    "\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]\n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "\n",
    "plt.savefig('Visualizations Outputs\\\\US_Rent_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 181,
   "id": "61992358",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Line graph showing all 4 states median rent prices throughout timeframe 2011-2016\n",
    "\n",
    "years = [\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"]\n",
    "\n",
    "TX_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"TX\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"Texas\", color=\"blue\") \n",
    "\n",
    "CA_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"CA\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"California\", color=\"orange\") \n",
    "\n",
    "IL_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"IL\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"Illinois\", color=\"green\") \n",
    "\n",
    "NY_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"NY\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"New York\", color=\"red\") \n",
    "\n",
    "US_graph = plt.plot(years, ALL_yearly_rent_df.loc[\"US\",[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\",]], label=\"US\", color=\"purple\") \n",
    "\n",
    "legend_list = [\"TX\", \"CA\", \"IL\", \"NY\", \"US\"]\n",
    "plt.legend([\"TX\", \"CA\", \"IL\", \"NY\", \"US\"], loc=\"best\")\n",
    "\n",
    "\n",
    "plt.xlabel(\"Year\")\n",
    "plt.ylabel(\"Cost of Rent (USD)\")\n",
    "plt.title(\"US, TX, CA, IL, NY Median Rent Prices 2011-2016\")\n",
    "plt.savefig('Visualizations Outputs\\All_Rent_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "a2a213fe",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Bar graph showing the change in rent (%)\n",
    "rent_change_bar = ALL_yearly_rent_df['Rent Change (%)'].plot(kind=\"bar\", color=[\"blue\", \"orange\", \"green\", \"red\", \"purple\"], figsize=(8,6),\n",
    "                                   title=\"Rent Change by State (%)\",\n",
    "                                   xlabel=\"State\",\n",
    "                                   ylabel=\"Percent of Change\")\n",
    "rent_change_bar.axhline(y=0, color= 'black', linewidth=1,)\n",
    "\n",
    "plt.savefig('Visualizations Outputs\\Change_Rent_graph.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 183,
   "id": "c0435d85",
   "metadata": {},
   "outputs": [],
   "source": [
    "year = [2011,2011, 2011, 2011, 2012, 2012, 2012, 2012, 2013, 2013, 2013, 2013, 2014, 2014, 2014, 2014, 2015, 2015, 2015, 2015, 2016, 2016, 2016, 2016]\n",
    "rent_cost = [1182.50,1717.75,1399.50,1398.00, 1166.50,1701.50,1347.25,1413.50,1200.50,1759.75,1363.75,1408.50,1224.5,1792.0,1390.0,1370.5,1310.50,1951.50,1412.25,1433.00,1336.00,2098.00,1414.75,1388.00]\n",
    "correlation = st.pearsonr(rent_cost,year)\n",
    "print(f\"The correlation between both factors is {round(correlation[0],2)}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "8c390579",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Box plot for data\n",
    "\n",
    "rents_data = pd.DataFrame({\"TX\": [1182.50,1166.50,1200.50,1224.5,1310.50,1336.00], \"CA\": [1717.75,1701.50,1759.75,1792.0,1951.50,2098.00], \n",
    "\"IL\": [1399.50,1347.25,1363.75,1390.0,1412.25,1414.75], \"NY\": [1398.00,1413.50,1408.50,1370.5,1433.00,1388.00], \"US\": [1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]})\n",
    "\n",
    "# Plot the dataframe\n",
    "ax = rents_data[['TX', 'CA', 'IL', 'NY', 'US']].plot(kind='box', title='Boxplot')\n",
    "\n",
    "# Display the plot\n",
    "plt.savefig('Visualizations Outputs\\Boxplot_graph.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "a6bfc300",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Histogram\n",
    "labels = []\n",
    "for state in ALL_yearly_rent_df_t.columns:\n",
    "    plt.hist(ALL_yearly_rent_df_t[state]) \n",
    "    labels.append(state)\n",
    "\n",
    "    plt.xlabel('Rent Values')\n",
    "    plt.ylabel('Frequency')\n",
    "    # plt.title('Histogram of Rent')\n",
    "    \n",
    "plt.legend(labels)\n",
    "plt.savefig('Visualizations Outputs\\Histogram.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 186,
   "id": "3d589568",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Using Chi Square Test for change in rent\n",
    "CA_obs = pd.Series([1717.75,1701.50,1759.75,1792.0,1951.50,2098.00], index=[\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\"])\n",
    "#[1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]\n",
    "\n",
    "CA_Chi_SQ_df = pd.DataFrame(CA_obs)\n",
    "\n",
    "CA_Chi_SQ_df[1] = [1215.5,1206.0,1222.5,1233.0,1290.5,1306.5]\n",
    "\n",
    "CA_Chi_SQ_df.columns = [\"CA Observed\", \"Expected\"]\n",
    "\n",
    "CA_Chi_SQ_df.T"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 187,
   "id": "0e9de83a",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = StandardScaler()\n",
    "CA_Chi_SQ_df_scaled = scaler.fit_transform(CA_Chi_SQ_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 188,
   "id": "f3ac3403",
   "metadata": {},
   "outputs": [],
   "source": [
    "CA_Chi_SQ_df_scaled[:,0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 189,
   "id": "cfb4c7be",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Quartiles and outliers\n",
    "quartiles_columns = ALL_yearly_rent_df_t.columns\n",
    "\n",
    "for column in quartiles_columns:\n",
    "    quartiles = np.percentile(ALL_yearly_rent_df_t[column], [25, 50, 75])\n",
    "    lower_q = np.percentile(ALL_yearly_rent_df_t, 25)\n",
    "    upper_q = np.percentile(ALL_yearly_rent_df_t, 75)\n",
    "\n",
    "    IQR = upper_q - lower_q\n",
    "\n",
    "    lower_bound = lower_q - 1.5 * IQR\n",
    "    upper_bound = upper_q + 1.5 * IQR\n",
    "\n",
    "    outliers = ALL_yearly_rent_df_t.loc[(ALL_yearly_rent_df_t[column] < lower_bound) | (ALL_yearly_rent_df_t[column] > upper_bound)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 190,
   "id": "87fd3b36",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Summary Statistics\n",
    "summary_stats = ALL_yearly_rent_df_t.describe()\n",
    "summary_stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 191,
   "id": "3198a3da",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show IL median rent data over time\n",
    "illinoisdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":IL_med_list\n",
    "}\n",
    "\n",
    "illinoisdf=pd.DataFrame(illinoisdata)\n",
    "\n",
    "illinoisdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"Illinois Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\IL_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 192,
   "id": "4b5acecf",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show CA median rent data overtime\n",
    "californiadata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":CA_med_list\n",
    "}\n",
    "\n",
    "californiadf=pd.DataFrame(californiadata)\n",
    "\n",
    "californiadf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "plt.title(\"California Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\CA_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 193,
   "id": "08fc93b2",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show Texas median rent data overtime\n",
    "texasdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":TX_med_list\n",
    "}\n",
    "\n",
    "texasdf=pd.DataFrame(texasdata)\n",
    "\n",
    "texasdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"Texas Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\TX_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 194,
   "id": "da05b51d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Scatterplot to show NY median rent data overtime\n",
    "#Used https://stackoverflow.com/questions/1347791/unicode-error-unicodeescape-codec-cant-decode-bytes-cannot-open-text-file\n",
    "#To help with unicode error when trying to save plot\n",
    "\n",
    "newyorkdata={\n",
    "    \"Dates\":columns_list,\n",
    "    \"Prices\":NY_med_list\n",
    "}\n",
    "\n",
    "newyorkdf=pd.DataFrame(newyorkdata)\n",
    "# texasdf.head()\n",
    "\n",
    "newyorkdf.plot(x ='Dates', y ='Prices', kind='scatter')\n",
    "# plt.grid(True)\n",
    "plt.title(\"New York Median Rent Scatter 2011-2016\")\n",
    "plt.xlabel(\"Mos/Year\")\n",
    "plt.xticks(rotation=90)\n",
    "plt.ylabel(\"Rent Cost ($)\")\n",
    "plt.savefig('Visualizations Outputs\\\\NY_Scatter.png')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 195,
   "id": "eddfb35c",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Dependencies and Set Up\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import scipy.stats as st\n",
    "from scipy.stats import linregress\n",
    "import seaborn as sns  # For heatmap visualization\n",
    "from sklearn.preprocessing import StandardScaler"
   ]
  }
 ],
 "metadata": {},
 "nbformat": 4,
 "nbformat_minor": 5
}
